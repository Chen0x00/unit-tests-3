/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.OrderWebApplication;
import com.nbcb.utils.IDWorker;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderWebApplication_SSTest extends OrderWebApplication_SSTest_scaffolding {
// allCoveredLines:[13, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33]

  @Test(timeout = 9000)
  public void test_getBean_0()  throws Throwable  {
      //caseID:d84c3e4093c433cd24f9f2a8fb92ca83
      //CoveredLines: [13, 20]
      //Assert: assertNotNull(method_result);
      
      OrderWebApplication orderWebApplication0 = new OrderWebApplication();
      
      //Call method: getBean
      IDWorker iDWorker0 = orderWebApplication0.getBean();
      
      //Test Result Assert
      assertNotNull(iDWorker0);
  }

  @Test(timeout = 9000)
  public void test_getThreadPool_1()  throws Throwable  {
      //caseID:719a60e2cc1bc8cee69e322dc2cc61c6
      //CoveredLines: [13, 25, 26, 27, 28, 29, 30, 31, 32, 33]
      //Assert: assertEquals(8, method_result.getMaxPoolSize());
      //Assert: assertEquals(60, method_result.getKeepAliveSeconds());
      //Assert: assertEquals(4, method_result.getCorePoolSize());
      //Assert: assertEquals("Pool_A", method_result.getThreadNamePrefix());
      
      OrderWebApplication orderWebApplication0 = new OrderWebApplication();
      
      //Call method: getThreadPool
      ThreadPoolTaskExecutor threadPoolTaskExecutor0 = orderWebApplication0.getThreadPool();
      
      //Test Result Assert
      assertEquals(8, threadPoolTaskExecutor0.getMaxPoolSize());
      
      //Test Result Assert
      assertEquals(60, threadPoolTaskExecutor0.getKeepAliveSeconds());
      
      //Test Result Assert
      assertEquals(4, threadPoolTaskExecutor0.getCorePoolSize());
      
      //Test Result Assert
      assertEquals("Pool_A", threadPoolTaskExecutor0.getThreadNamePrefix());
  }
}
