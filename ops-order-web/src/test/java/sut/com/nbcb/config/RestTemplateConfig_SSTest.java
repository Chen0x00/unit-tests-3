/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.config;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.config.RestTemplateConfig;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class RestTemplateConfig_SSTest extends RestTemplateConfig_SSTest_scaffolding {
// allCoveredLines:[18, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 39, 40, 41, 42]

  @Test(timeout = 9000)
  public void test_clientHttpRequestFactory_0()  throws Throwable  {
      //caseID:35b9c2642d0cc366c282661304de14f8
      //CoveredLines: [18, 39, 40, 41, 42]
      //Assert: assertNotNull(method_result);
      
      RestTemplateConfig restTemplateConfig0 = new RestTemplateConfig();
      
      //Call method: clientHttpRequestFactory
      ClientHttpRequestFactory clientHttpRequestFactory0 = restTemplateConfig0.clientHttpRequestFactory();
      
      //Test Result Assert
      assertNotNull(clientHttpRequestFactory0);
  }

  @Test(timeout = 9000)
  public void test_restTemplate_1()  throws Throwable  {
      //caseID:c6f165005c4c9fdce6e9e42ee070eecb
      //CoveredLines: [18, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34]
      //Input_0_ClientHttpRequestFactory: {}
      //Assert: assertNotNull(method_result);
      
      RestTemplateConfig restTemplateConfig0 = new RestTemplateConfig();
      //mock clientHttpRequestFactory0
      ClientHttpRequestFactory clientHttpRequestFactory0 = mock(ClientHttpRequestFactory.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: restTemplate
      RestTemplate restTemplate0 = restTemplateConfig0.restTemplate(clientHttpRequestFactory0);
      
      //Test Result Assert
      assertNotNull(restTemplate0);
  }
}
