/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Brand;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Brand_SSTest extends Brand_SSTest_scaffolding {
// allCoveredLines:[8, 13, 17, 21, 25, 29, 33, 37, 41]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:c2dbaf2f5da58c113fc4ef23058d870a
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: Ld=,L~G
      //Assert: assertFalse(method_result);
      
      Brand brand0 = new Brand();
      
      //Call method: equals
      boolean boolean0 = brand0.equals("Ld=,L~G");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:1beb4ba1098a55c2bdf0b5b48646f630
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: brand0
      //Assert: assertTrue(method_result);
      
      Brand brand0 = new Brand();
      
      //Call method: equals
      boolean boolean0 = brand0.equals(brand0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:a34d71142532ef41db852c0ce03a29ea
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41]
      //Input_0_Object: brand0
      //Assert: assertTrue(method_result);
      
      Brand brand0 = new Brand();
      Brand brand1 = new Brand();
      
      //Call method: equals
      boolean boolean0 = brand1.equals(brand0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_03()  throws Throwable  {
      //caseID:e596e49667ee57a9383d503d33417f6b
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41]
      
      Brand brand0 = new Brand();
      
      //Call method: hashCode
      brand0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDesc_04()  throws Throwable  {
      //caseID:c646ceea4b6c80039df01797eca8eff2
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: com.nbcb.entity.Brand
      
      Brand brand0 = new Brand();
      
      //Call method: setDesc
      brand0.setDesc("com.nbcb.entity.Brand");
      
      //Test Result Assert
      assertNull(brand0.getId());
  }

  @Test(timeout = 9000)
  public void test_setId_05()  throws Throwable  {
      //caseID:32d2338b43ac7d7c2a7064ad5fa2d8ea
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 1
      
      Brand brand0 = new Brand();
      
      //Call method: setId
      brand0.setId("1");
      
      //Test Result Assert
      assertEquals("1", brand0.getId());
  }

  @Test(timeout = 9000)
  public void test_setLogo_06()  throws Throwable  {
      //caseID:8b182ab958800fac3aa8edd553e2cad2
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 
      
      Brand brand0 = new Brand();
      
      //Call method: setLogo
      brand0.setLogo("");
      
      //Test Result Assert
      assertNull(brand0.getId());
  }

  @Test(timeout = 9000)
  public void test_setName_07()  throws Throwable  {
      //caseID:8994aa5bcd7a81c9b3b75c9179aad2a2
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 1
      
      Brand brand0 = new Brand();
      
      //Call method: setName
      brand0.setName("1");
      
      //Test Result Assert
      assertNull(brand0.getLogo());
  }

  @Test(timeout = 9000)
  public void test_setNameEn_08()  throws Throwable  {
      //caseID:0e9a6b927b42cd1634afdd90195b3004
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 
      
      Brand brand0 = new Brand();
      
      //Call method: setNameEn
      brand0.setNameEn("");
      
      //Test Result Assert
      assertNull(brand0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPicture_09()  throws Throwable  {
      //caseID:30cbda5a6c49130edfec34788a7330cb
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 
      
      Brand brand0 = new Brand();
      
      //Call method: setPicture
      brand0.setPicture("");
      
      //Test Result Assert
      assertNull(brand0.getLogo());
  }

  @Test(timeout = 9000)
  public void test_setPlace_10()  throws Throwable  {
      //caseID:2c9f499a26217bc21b92436b5f08e1e6
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: object0
      
      Brand brand0 = new Brand();
      Object object0 = new Object();
      
      //Call method: setPlace
      brand0.setPlace(object0);
      
      //Test Result Assert
      assertNull(brand0.getId());
  }

  @Test(timeout = 9000)
  public void test_setType_11()  throws Throwable  {
      //caseID:ec6ff127fce8da2020f8a46907a3152c
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 59
      
      Brand brand0 = new Brand();
      
      //Call method: setType
      brand0.setType("59");
      
      //Test Result Assert
      assertNull(brand0.getName());
  }

  @Test(timeout = 9000)
  public void test_toString_12()  throws Throwable  {
      //caseID:dda6fe8bb7ded29748cb6d5184295032
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41]
      //Assert: assertEquals("Brand(desc=null, id=null, logo=null, name=null, nameEn=null, picture=null, place=null, type=null)", method_result);
      
      Brand brand0 = new Brand();
      
      //Call method: toString
      String string0 = brand0.toString();
      
      //Test Result Assert
      assertEquals("Brand(desc=null, id=null, logo=null, name=null, nameEn=null, picture=null, place=null, type=null)", string0);
  }
}
