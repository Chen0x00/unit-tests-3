/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Details;
import com.nbcb.entity.Property;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Details_SSTest extends Details_SSTest_scaffolding {
// allCoveredLines:[10, 15, 19]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:22200dacab2df55ed5362dbde149ba33
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      Details details0 = new Details();
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = details0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:722adb4d085565193e5af5fcb0df2b03
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: details0
      //Assert: assertTrue(method_result);
      
      Details details0 = new Details();
      
      //Call method: equals
      boolean boolean0 = details0.equals(details0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:19820bbb6291103e0b14ce4aba2300c8
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 15, 19]
      //Input_0_Object: details0
      //Assert: assertTrue(method_result);
      
      Details details0 = new Details();
      Details details1 = new Details();
      
      //Call method: equals
      boolean boolean0 = details1.equals(details0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:70fe22ad182a1d563a7119cddb1d21af
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 15, 19]
      //Input_0_Object: details1
      //Assert: assertTrue(method_result);
      
      Details details0 = new Details();
      Details details1 = new Details();
      
      //Call method: equals
      boolean boolean0 = details0.equals(details1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:f0a6e05b61d5c46401b8b16c6b1da89e
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 15, 19]
      
      Details details0 = new Details();
      
      //Call method: hashCode
      details0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setPictures_5()  throws Throwable  {
      //caseID:eed0fbde31850608e83f97a88fc16f02
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10]
      //Input_0_List<String>: linkedList0
      
      Details details0 = new Details();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      
      //Call method: setPictures
      details0.setPictures(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 9000)
  public void test_setProperties_6()  throws Throwable  {
      //caseID:0ffd32949e5ad65902dfca06dd2b3ba7
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10]
      //Input_0_List<Property>: linkedList0
      
      Details details0 = new Details();
      LinkedList<Property> linkedList0 = new LinkedList<Property>();
      
      //Call method: setProperties
      details0.setProperties(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:cad0c2764ca6c09f3724bd043d4881f1
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 15, 19]
      //Assert: assertEquals("Details(pictures=null, properties=null)", method_result);
      
      Details details0 = new Details();
      
      //Call method: toString
      String string0 = details0.toString();
      
      //Test Result Assert
      assertEquals("Details(pictures=null, properties=null)", string0);
  }
}
