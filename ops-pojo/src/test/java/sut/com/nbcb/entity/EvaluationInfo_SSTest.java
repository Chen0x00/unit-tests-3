/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.EvaluationInfo;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class EvaluationInfo_SSTest extends EvaluationInfo_SSTest_scaffolding {
// allCoveredLines:[8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:c0cb8fcef97c8e2e2c4052c82443eea6
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: evaluationInfo0
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:6f29d3fda61c89942824fde1613de53e
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo1
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:b8a9f3c92fdb0a52213ccf4d5d0c6aef
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo0
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo1.equals(evaluationInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:5d29ea3cd0cc7cba5c0becb79f7b9317
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo1
      //Assert: assertFalse(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      PrivateAccess.setVariable((Class<?>) EvaluationInfo.class, evaluationInfo0, "tags", (Object) evaluationInfo0);
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:84efc64826e52b118d83ce68e81dc016
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: hashCode
      evaluationInfo0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setContent_05()  throws Throwable  {
      //caseID:74ec0859ef49711328e048b7b4036b64
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: , member=
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setContent
      evaluationInfo0.setContent(", member=");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setCreateTime_06()  throws Throwable  {
      //caseID:5f64db3298be1621fdd917e9493127ef
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: Y.4KnPHIwq)`qfbco
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setCreateTime
      evaluationInfo0.setCreateTime("Y.4KnPHIwq)`qfbco");
      
      //Test Result Assert
      assertEquals("Y.4KnPHIwq)`qfbco", evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:6e3f89c31efeee7cd6add3f89e714c0f
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 1.0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setId
      evaluationInfo0.setId("1.0");
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getScore());
  }

  @Test(timeout = 9000)
  public void test_setMember_08()  throws Throwable  {
      //caseID:b2a659695afe9676f2642ef337bb3422
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: , officialReply=
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setMember
      evaluationInfo0.setMember(", officialReply=");
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraisePercent());
  }

  @Test(timeout = 9000)
  public void test_setOfficialReply_09()  throws Throwable  {
      //caseID:40c5250bf1894a63b29ad405462f286f
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: e3u8JFa+G|Wt
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setOfficialReply
      evaluationInfo0.setOfficialReply("e3u8JFa+G|Wt");
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraisePercent());
  }

  @Test(timeout = 9000)
  public void test_setOrderInfo_10()  throws Throwable  {
      //caseID:df8b70f49b412eddfdd489181d5e26aa
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: ~&4Munnh
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setOrderInfo
      evaluationInfo0.setOrderInfo("~&4Munnh");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setPictures_11()  throws Throwable  {
      //caseID:6bbc5e87accdb4a752595ecd51f66f8d
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: , praisePercent=
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPictures
      evaluationInfo0.setPictures(", praisePercent=");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPraiseCount_12()  throws Throwable  {
      //caseID:08a73a79fbfb7371c04c9ef795c67474
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 1
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPraiseCount
      evaluationInfo0.setPraiseCount(1L);
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPraisePercent_13()  throws Throwable  {
      //caseID:360fabe6bc44db4efd69b20e4c8b9fba
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPraisePercent
      evaluationInfo0.setPraisePercent(0L);
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getScore());
  }

  @Test(timeout = 9000)
  public void test_setScore_14()  throws Throwable  {
      //caseID:c46499bed97e274d551ddb61a5391601
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 5363
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setScore
      evaluationInfo0.setScore(5363L);
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setTags_15()  throws Throwable  {
      //caseID:3e1c63ab46572e737cd2312550669fb2
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: %^`b\"Z)+y?]~t|5f#{
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setTags
      evaluationInfo0.setTags("%^`b\"Z)+y?]~t|5f#{");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_toString_16()  throws Throwable  {
      //caseID:d5fb4804774cf3ebeb9da9206c2bb9f0
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Assert: assertEquals("EvaluationInfo(content=null, createTime=null, id=null, member=null, officialReply=null, orderInfo=null, pictures=null, praiseCount=0, praisePercent=0, score=0, tags=null)", method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: toString
      String string0 = evaluationInfo0.toString();
      
      //Test Result Assert
      assertEquals("EvaluationInfo(content=null, createTime=null, id=null, member=null, officialReply=null, orderInfo=null, pictures=null, praiseCount=0, praisePercent=0, score=0, tags=null)", string0);
  }
}
