/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.EvaluationInfo;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class EvaluationInfo_SSTest extends EvaluationInfo_SSTest_scaffolding {
// allCoveredLines:[8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:b627cc9e73a2e669a115172111a40c26
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:878795dab48ee40bc3682c779e06c9d2
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: evaluationInfo0
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:28d53feea16066bbbdd5cfba4147b995
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo0
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo1.equals(evaluationInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:898da07f78c304cc1d938c6abf4d39ed
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo1
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:31e9d1077d63f47ce0f7b950c7f919b5
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: hashCode
      evaluationInfo0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setContent_05()  throws Throwable  {
      //caseID:b2a13c5709e242584107a74150ab7142
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 1.0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setContent
      evaluationInfo0.setContent("1.0");
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraiseCount());
  }

  @Test(timeout = 9000)
  public void test_setCreateTime_06()  throws Throwable  {
      //caseID:fe0c05c7859885c8bcae5be1dfb140a0
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setCreateTime
      evaluationInfo0.setCreateTime("");
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraiseCount());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:63cc70df6a74a89491a423125e7af0a4
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: %K
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setId
      evaluationInfo0.setId("%K");
      
      //Test Result Assert
      assertEquals("%K", evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setMember_08()  throws Throwable  {
      //caseID:01f3c0d3881bca697c5846cd31b6307a
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: object0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      Object object0 = new Object();
      
      //Call method: setMember
      evaluationInfo0.setMember(object0);
      
      //Test Result Assert
      assertNull(evaluationInfo0.getContent());
  }

  @Test(timeout = 9000)
  public void test_setOfficialReply_09()  throws Throwable  {
      //caseID:0903c125e9a4307d33b1d719facd2216
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setOfficialReply
      evaluationInfo0.setOfficialReply("");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getContent());
  }

  @Test(timeout = 9000)
  public void test_setOrderInfo_10()  throws Throwable  {
      //caseID:d6184fa8e2df0d63cf51285ce7277632
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setOrderInfo
      evaluationInfo0.setOrderInfo("");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPictures_11()  throws Throwable  {
      //caseID:2d1d9691193d6695a8db73dbc7f5de7a
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: w]d/nU|(7
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPictures
      evaluationInfo0.setPictures("w]d/nU|(7");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPraiseCount_12()  throws Throwable  {
      //caseID:ff8b6eb936ad85249c22cae1acc97191
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPraiseCount
      evaluationInfo0.setPraiseCount(0L);
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setPraisePercent_13()  throws Throwable  {
      //caseID:bead14b080cad4520b463d131e3777f9
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 1807
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPraisePercent
      evaluationInfo0.setPraisePercent(1807L);
      
      //Test Result Assert
      assertEquals(1807L, evaluationInfo0.getPraisePercent());
  }

  @Test(timeout = 9000)
  public void test_setScore_14()  throws Throwable  {
      //caseID:2bf2d8d8f869cbfd2f255f81c01c5de7
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 1
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setScore
      evaluationInfo0.setScore(1L);
      
      //Test Result Assert
      assertNull(evaluationInfo0.getContent());
  }

  @Test(timeout = 9000)
  public void test_setTags_15()  throws Throwable  {
      //caseID:a096ade26cef7127a7afb65361c372d1
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: object0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      Object object0 = new Object();
      
      //Call method: setTags
      evaluationInfo0.setTags(object0);
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraiseCount());
  }

  @Test(timeout = 9000)
  public void test_toString_16()  throws Throwable  {
      //caseID:cc05c48d5e44d77bf9af0872e9ee4e0c
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Assert: assertEquals("EvaluationInfo(content=null, createTime=null, id=null, member=null, officialReply=null, orderInfo=null, pictures=null, praiseCount=0, praisePercent=0, score=0, tags=null)", method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: toString
      String string0 = evaluationInfo0.toString();
      
      //Test Result Assert
      assertEquals("EvaluationInfo(content=null, createTime=null, id=null, member=null, officialReply=null, orderInfo=null, pictures=null, praiseCount=0, praisePercent=0, score=0, tags=null)", string0);
  }
}
