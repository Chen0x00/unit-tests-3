/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.EvaluationInfo;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class EvaluationInfo_SSTest extends EvaluationInfo_SSTest_scaffolding {
// allCoveredLines:[8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:838142b341f7c7417d6c2f6874089862
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:faa2752fa9eb706ede8538900e0fe295
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: evaluationInfo0
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:9a1d6df00581a024605a542b5055ac39
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo1
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo0.equals(evaluationInfo1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:bc7b37373ec0c7530d431a2d68c4176f
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Input_0_Object: evaluationInfo0
      //Assert: assertTrue(method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      EvaluationInfo evaluationInfo1 = new EvaluationInfo();
      
      //Call method: equals
      boolean boolean0 = evaluationInfo1.equals(evaluationInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:8df77a89cc1d6aa631f0d7a7cb40d260
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: hashCode
      evaluationInfo0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setContent_05()  throws Throwable  {
      //caseID:714e7d93c6046b868be7e75217a159ef
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setContent
      evaluationInfo0.setContent("");
      
      //Test Result Assert
      assertEquals("", evaluationInfo0.getContent());
  }

  @Test(timeout = 9000)
  public void test_setCreateTime_06()  throws Throwable  {
      //caseID:e97dd3b3006fb77859f8bb5a2efad6f5
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: , pictures=
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setCreateTime
      evaluationInfo0.setCreateTime(", pictures=");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:ab69770d82766d6393e548c690d463a6
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 1
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setId
      evaluationInfo0.setId("1");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getContent());
  }

  @Test(timeout = 9000)
  public void test_setMember_08()  throws Throwable  {
      //caseID:6dfdfa2f80feb7df2e3d511f8c96d4ee
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 1
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setMember
      evaluationInfo0.setMember("1");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setOfficialReply_09()  throws Throwable  {
      //caseID:0f0f519b5c7204414b467c890969ad5e
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: , officialReply=
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setOfficialReply
      evaluationInfo0.setOfficialReply(", officialReply=");
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraiseCount());
  }

  @Test(timeout = 9000)
  public void test_setOrderInfo_10()  throws Throwable  {
      //caseID:f2b9602845a7f27d7bbe737465120622
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: , orderInfo=
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setOrderInfo
      evaluationInfo0.setOrderInfo(", orderInfo=");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPictures_11()  throws Throwable  {
      //caseID:2de7e932b3590ae0564f2556013b6eef
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 1
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPictures
      evaluationInfo0.setPictures("1");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setPraiseCount_12()  throws Throwable  {
      //caseID:e6f7c444f9a7f030e0af86b26ca66e30
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 1606
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPraiseCount
      evaluationInfo0.setPraiseCount(1606L);
      
      //Test Result Assert
      assertNull(evaluationInfo0.getCreateTime());
  }

  @Test(timeout = 9000)
  public void test_setPraisePercent_13()  throws Throwable  {
      //caseID:eac4cf1ba1c420c183652cef53f9fc6f
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: -1623
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setPraisePercent
      evaluationInfo0.setPraisePercent((-1623L));
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getScore());
  }

  @Test(timeout = 9000)
  public void test_setScore_14()  throws Throwable  {
      //caseID:978cecc7a5e7b32929ffac89bcdbf016
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_long: 0
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setScore
      evaluationInfo0.setScore(0L);
      
      //Test Result Assert
      assertEquals(0L, evaluationInfo0.getPraisePercent());
  }

  @Test(timeout = 9000)
  public void test_setTags_15()  throws Throwable  {
      //caseID:9860d55a717d06306e306c98c4d6ba82
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: com.nbcb.entity.EvaluationInfo
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: setTags
      evaluationInfo0.setTags("com.nbcb.entity.EvaluationInfo");
      
      //Test Result Assert
      assertNull(evaluationInfo0.getId());
  }

  @Test(timeout = 9000)
  public void test_toString_16()  throws Throwable  {
      //caseID:e1f10f46730ea269fb08e5695f4f56d3
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53]
      //Assert: assertEquals("EvaluationInfo(content=null, createTime=null, id=null, member=null, officialReply=null, orderInfo=null, pictures=null, praiseCount=0, praisePercent=0, score=0, tags=null)", method_result);
      
      EvaluationInfo evaluationInfo0 = new EvaluationInfo();
      
      //Call method: toString
      String string0 = evaluationInfo0.toString();
      
      //Test Result Assert
      assertEquals("EvaluationInfo(content=null, createTime=null, id=null, member=null, officialReply=null, orderInfo=null, pictures=null, praiseCount=0, praisePercent=0, score=0, tags=null)", string0);
  }
}
