/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.entity.GoodsDetailResponse;
import com.nbcb.entity.GoodsDetailResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class GoodsDetailResponse_SSTest extends GoodsDetailResponse_SSTest_scaffolding {
// allCoveredLines:[7, 12, 16, 20]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:cce41d36bce731ecdcd2e82fcc0cfcfa
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: 
      //Assert: assertFalse(method_result);
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      
      //Call method: equals
      boolean boolean0 = goodsDetailResponse0.equals("");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:5045374e225e2ec0d92928b13d1ddb90
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: goodsDetailResponse0
      //Assert: assertTrue(method_result);
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      
      //Call method: equals
      boolean boolean0 = goodsDetailResponse0.equals(goodsDetailResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:e884eb21bc482bc42da8d4539db807a1
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: goodsDetailResponse0
      //Assert: assertTrue(method_result);
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      GoodsDetailResponse goodsDetailResponse1 = new GoodsDetailResponse();
      
      //Call method: equals
      boolean boolean0 = goodsDetailResponse1.equals(goodsDetailResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:8e75aee09688c3f11e3149559dde1578
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: goodsDetailResponse1
      //Assert: assertTrue(method_result);
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      GoodsDetailResponse goodsDetailResponse1 = new GoodsDetailResponse();
      
      //Call method: equals
      boolean boolean0 = goodsDetailResponse0.equals(goodsDetailResponse1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:cf5df1fce15e910fdf0dcc64c311383d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      
      //Call method: hashCode
      goodsDetailResponse0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCode_5()  throws Throwable  {
      //caseID:c0cb41d9315084cc8cbe6b124481f2ed
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: elastic
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      
      //Call method: setCode
      goodsDetailResponse0.setCode("elastic");
      
      //Test Result Assert
      assertEquals("elastic", goodsDetailResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setMsg_6()  throws Throwable  {
      //caseID:841946609b2fdd6530ed67efc100c012
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: @Uvx12~
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      
      //Call method: setMsg
      goodsDetailResponse0.setMsg("@Uvx12~");
      
      //Test Result Assert
      assertEquals("@Uvx12~", goodsDetailResponse0.getMsg());
  }

  @Test(timeout = 9000)
  public void test_setResult_7()  throws Throwable  {
      //caseID:3392ef601acde2dcadd6e01e59c7d584
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_GoodsDetailResult: {}
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      //mock goodsDetailResult0
      GoodsDetailResult goodsDetailResult0 = mock(GoodsDetailResult.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setResult
      goodsDetailResponse0.setResult(goodsDetailResult0);
      
      //Test Result Assert
      assertNull(goodsDetailResponse0.getMsg());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:877f693eb6ce7c747063d27f65610287
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Assert: assertEquals("GoodsDetailResponse(code=null, msg=null, result=null)", method_result);
      
      GoodsDetailResponse goodsDetailResponse0 = new GoodsDetailResponse();
      
      //Call method: toString
      String string0 = goodsDetailResponse0.toString();
      
      //Test Result Assert
      assertEquals("GoodsDetailResponse(code=null, msg=null, result=null)", string0);
  }
}
