/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.entity.Brand;
import com.nbcb.entity.Category;
import com.nbcb.entity.Details;
import com.nbcb.entity.EvaluationInfo;
import com.nbcb.entity.GoodsDetailResult;
import com.nbcb.entity.HotByDay;
import com.nbcb.entity.ResultSpec;
import com.nbcb.entity.SimilarProduct;
import com.nbcb.entity.Skus;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class GoodsDetailResult_SSTest extends GoodsDetailResult_SSTest_scaffolding {
// allCoveredLines:[7, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112]

  @Test(timeout = 9000)
  public void test_canEqual_00()  throws Throwable  {
      //caseID:85a2f9bd7ecb2ea58eadf9bd4564befe
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: resultSpec0
      //Assert: assertFalse(method_result);
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: canEqual
      boolean boolean0 = (boolean)PrivateAccess.callMethod((Class<GoodsDetailResult>) GoodsDetailResult.class, goodsDetailResult0, "canEqual", (Object) resultSpec0, (Class<?>) Object.class);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:ff9636267aa8ce063cb514cc6347280b
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: goodsDetailResult0
      //Assert: assertTrue(method_result);
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: equals
      boolean boolean0 = goodsDetailResult0.equals(goodsDetailResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:e817d1a8f50c81c6b642702ff8298ada
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: resultSpec0
      //Assert: assertFalse(method_result);
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: equals
      boolean boolean0 = goodsDetailResult0.equals(resultSpec0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_03()  throws Throwable  {
      //caseID:d35f1671ad8ad2e69d2677a5e71800e0
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112]
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: hashCode
      goodsDetailResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setBrand_04()  throws Throwable  {
      //caseID:1924cfd2864029b747f7199b44f92fd0
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Brand: {}
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      //mock brand0
      Brand brand0 = mock(Brand.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setBrand
      goodsDetailResult0.setBrand(brand0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getCommentCount());
  }

  @Test(timeout = 9000)
  public void test_setCategories_05()  throws Throwable  {
      //caseID:939478b164cd54c1b01d6db9ef70905f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<Category>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<Category> linkedList0 = new LinkedList<Category>();
      
      //Call method: setCategories
      goodsDetailResult0.setCategories(linkedList0);
      
      //Test Result Assert
      assertFalse(goodsDetailResult0.isPreSale());
  }

  @Test(timeout = 9000)
  public void test_setCollectCount_06()  throws Throwable  {
      //caseID:ae08e89c4b8d19213f2526b02a49841c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_long: 0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setCollectCount
      goodsDetailResult0.setCollectCount(0L);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getCommentCount());
  }

  @Test(timeout = 9000)
  public void test_setCommentCount_07()  throws Throwable  {
      //caseID:df63aaab4fc3a613cc51186c39b2e814
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_long: 466
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setCommentCount
      goodsDetailResult0.setCommentCount(466L);
      
      //Test Result Assert
      assertEquals(466L, goodsDetailResult0.getCommentCount());
  }

  @Test(timeout = 9000)
  public void test_setDesc_08()  throws Throwable  {
      //caseID:67c0b9f13064ee8804da5c0a64806bc5
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 59
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setDesc
      goodsDetailResult0.setDesc("59");
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getPrice());
  }

  @Test(timeout = 9000)
  public void test_setDetails_09()  throws Throwable  {
      //caseID:5e67cdb9f19afd3b28396dc8d8359251
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Details: {}
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      //mock details0
      Details details0 = mock(Details.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setDetails
      goodsDetailResult0.setDetails(details0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getCommentCount());
  }

  @Test(timeout = 9000)
  public void test_setDiscount_10()  throws Throwable  {
      //caseID:89cd366a81a0778d023245387acbd5d6
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_long: -1
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setDiscount
      goodsDetailResult0.setDiscount((-1L));
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setEvaluationInfo_11()  throws Throwable  {
      //caseID:3dfe615667898de117194b36f496ee4f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_EvaluationInfo: {}
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      //mock evaluationInfo0
      EvaluationInfo evaluationInfo0 = mock(EvaluationInfo.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setEvaluationInfo
      goodsDetailResult0.setEvaluationInfo(evaluationInfo0);
      
      //Test Result Assert
      assertFalse(goodsDetailResult0.isPreSale());
  }

  @Test(timeout = 9000)
  public void test_setHotByDay_12()  throws Throwable  {
      //caseID:793b5188f9314979f1b4ea1502bc3f1f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<HotByDay>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<HotByDay> linkedList0 = new LinkedList<HotByDay>();
      
      //Call method: setHotByDay
      goodsDetailResult0.setHotByDay(linkedList0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getDiscount());
  }

  @Test(timeout = 9000)
  public void test_setId_13()  throws Throwable  {
      //caseID:c67403f30860058baf76d42b8164e403
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: , similarProducts=
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setId
      goodsDetailResult0.setId(", similarProducts=");
      
      //Test Result Assert
      assertFalse(goodsDetailResult0.isPreSale());
  }

  @Test(timeout = 9000)
  public void test_setInventory_14()  throws Throwable  {
      //caseID:165df832c65b39b5f41863b3c4eb888b
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_long: 0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setInventory
      goodsDetailResult0.setInventory(0L);
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getPrice());
  }

  @Test(timeout = 9000)
  public void test_setIsCollect_15()  throws Throwable  {
      //caseID:5eea692633fb276c4dc25dc30712fcc9
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: goodsDetailResult0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setIsCollect
      goodsDetailResult0.setIsCollect(goodsDetailResult0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getCollectCount());
  }

  @Test(timeout = 9000)
  public void test_setMainPictures_16()  throws Throwable  {
      //caseID:a57ceb71c754425e5c57259d1fd735ed
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<String>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      
      //Call method: setMainPictures
      goodsDetailResult0.setMainPictures(linkedList0);
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getOldPrice());
  }

  @Test(timeout = 9000)
  public void test_setMainVideos_17()  throws Throwable  {
      //caseID:38217f7697ffc97e5fdfd599fa17e76f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<String>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      
      //Call method: setMainVideos
      goodsDetailResult0.setMainVideos(linkedList0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getSalesCount());
  }

  @Test(timeout = 9000)
  public void test_setName_18()  throws Throwable  {
      //caseID:a83bde4a40ee9177578a9eb5b433cc66
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: , spuCode=
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setName
      goodsDetailResult0.setName(", spuCode=");
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getDiscount());
  }

  @Test(timeout = 9000)
  public void test_setOldPrice_19()  throws Throwable  {
      //caseID:694549b6cb589fba28448e6aa9181a7d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: gQo|M!6ir
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setOldPrice
      goodsDetailResult0.setOldPrice("gQo|M!6ir");
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPreSale_20()  throws Throwable  {
      //caseID:fc7b3a3640ae7db6031411df6a57c54c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_boolean: true
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setPreSale
      goodsDetailResult0.setPreSale(true);
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setPrice_21()  throws Throwable  {
      //caseID:b510c25c99f7fe21046017a31c32b09c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setPrice
      goodsDetailResult0.setPrice("");
      
      //Test Result Assert
      assertEquals("", goodsDetailResult0.getPrice());
  }

  @Test(timeout = 9000)
  public void test_setRecommends_22()  throws Throwable  {
      //caseID:738674f112fb5634b6627b9531ad6a93
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: 
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setRecommends
      goodsDetailResult0.setRecommends("");
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setSalesCount_23()  throws Throwable  {
      //caseID:5ce0769fcdcc82b2a620a2f803f3bc10
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_long: 2781
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setSalesCount
      goodsDetailResult0.setSalesCount(2781L);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getCommentCount());
  }

  @Test(timeout = 9000)
  public void test_setSimilarProducts_24()  throws Throwable  {
      //caseID:8c0f3106e413a73d2fd6295507b5223d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<SimilarProduct>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<SimilarProduct> linkedList0 = new LinkedList<SimilarProduct>();
      
      //Call method: setSimilarProducts
      goodsDetailResult0.setSimilarProducts(linkedList0);
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getPrice());
  }

  @Test(timeout = 9000)
  public void test_setSkus_25()  throws Throwable  {
      //caseID:70e79790e8d136dc7b707448d322a33c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<Skus>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<Skus> linkedList0 = new LinkedList<Skus>();
      
      //Call method: setSkus
      goodsDetailResult0.setSkus(linkedList0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getSalesCount());
  }

  @Test(timeout = 9000)
  public void test_setSpecs_26()  throws Throwable  {
      //caseID:12a3141354d6c9d1126b929df2d205ba
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<ResultSpec>: linkedList0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      LinkedList<ResultSpec> linkedList0 = new LinkedList<ResultSpec>();
      
      //Call method: setSpecs
      goodsDetailResult0.setSpecs(linkedList0);
      
      //Test Result Assert
      assertEquals(0L, goodsDetailResult0.getCollectCount());
  }

  @Test(timeout = 9000)
  public void test_setSpuCode_27()  throws Throwable  {
      //caseID:bbee09a1365e6f28db8977eb1e52099c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: IT-f6A1TY^
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setSpuCode
      goodsDetailResult0.setSpuCode("IT-f6A1TY^");
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getName());
  }

  @Test(timeout = 9000)
  public void test_setUserAddresses_28()  throws Throwable  {
      //caseID:fd5021300b4ee47f995bade456220b47
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: goodsDetailResult0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setUserAddresses
      goodsDetailResult0.setUserAddresses(goodsDetailResult0);
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setVideoScale_29()  throws Throwable  {
      //caseID:88b2203446f2d070bf7520f016c3c3b1
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_long: 0
      
      GoodsDetailResult goodsDetailResult0 = new GoodsDetailResult();
      
      //Call method: setVideoScale
      goodsDetailResult0.setVideoScale(0L);
      
      //Test Result Assert
      assertNull(goodsDetailResult0.getName());
  }
}
