/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.GoodsResponse;
import com.nbcb.entity.GoodsResult;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class GoodsResponse_SSTest extends GoodsResponse_SSTest_scaffolding {
// allCoveredLines:[7, 12, 16, 20]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:26d4e7bccb404c28f837c4aff0cad48c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: linkedList0
      //Assert: assertFalse(method_result);
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      LinkedList<GoodsResult> linkedList0 = new LinkedList<GoodsResult>();
      
      //Call method: equals
      boolean boolean0 = goodsResponse0.equals(linkedList0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:3c0f700d9cca032563996ac8988f2147
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: goodsResponse0
      //Assert: assertTrue(method_result);
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      
      //Call method: equals
      boolean boolean0 = goodsResponse0.equals(goodsResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:c4eae8dcd7c68cf2f36bd6719980b621
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: goodsResponse0
      //Assert: assertTrue(method_result);
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      GoodsResponse goodsResponse1 = new GoodsResponse();
      
      //Call method: equals
      boolean boolean0 = goodsResponse1.equals(goodsResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:49e60936218129a7e748f533a518c0b2
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: goodsResponse1
      //Assert: assertTrue(method_result);
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      GoodsResponse goodsResponse1 = new GoodsResponse();
      
      //Call method: equals
      boolean boolean0 = goodsResponse0.equals(goodsResponse1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:23ea35a00f54c331fb0e9a295c5a3e83
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      
      //Call method: hashCode
      goodsResponse0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCode_5()  throws Throwable  {
      //caseID:ea26ea5d86864aad0bdb77b2c4c48903
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 0
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      
      //Call method: setCode
      goodsResponse0.setCode("0");
      
      //Test Result Assert
      assertEquals("0", goodsResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setMsg_6()  throws Throwable  {
      //caseID:0eeab3aab7620605eee07accfa3b2721
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: GoodsResponse(code=
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      
      //Call method: setMsg
      goodsResponse0.setMsg("GoodsResponse(code=");
      
      //Test Result Assert
      assertNull(goodsResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setResult_7()  throws Throwable  {
      //caseID:7591f8edd0ea53a0fa40730f8bec1eea
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<GoodsResult>: linkedList0
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      LinkedList<GoodsResult> linkedList0 = new LinkedList<GoodsResult>();
      
      //Call method: setResult
      goodsResponse0.setResult(linkedList0);
      
      //Test Result Assert
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:abbd1eeaa1b64b5f04342b16eaf864cb
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Assert: assertEquals("GoodsResponse(code=null, msg=null, result=null)", method_result);
      
      GoodsResponse goodsResponse0 = new GoodsResponse();
      
      //Call method: toString
      String string0 = goodsResponse0.toString();
      
      //Test Result Assert
      assertEquals("GoodsResponse(code=null, msg=null, result=null)", string0);
  }
}
