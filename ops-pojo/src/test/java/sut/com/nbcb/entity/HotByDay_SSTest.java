/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.HotByDay;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class HotByDay_SSTest extends HotByDay_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18, 22, 26, 30, 34]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:e3b9be6fcc71a3adb44fa69b24af0340
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 
      //Assert: assertFalse(method_result);
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: equals
      boolean boolean0 = hotByDay0.equals("");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:be9bd24c036439d62a2f6e1e9707d86c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: hotByDay0
      //Assert: assertTrue(method_result);
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: equals
      boolean boolean0 = hotByDay0.equals(hotByDay0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:6ae1628cbecd7cc87139f4b8fe630f2c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      //Input_0_Object: hotByDay0
      //Assert: assertTrue(method_result);
      
      HotByDay hotByDay0 = new HotByDay();
      HotByDay hotByDay1 = new HotByDay();
      
      //Call method: equals
      boolean boolean0 = hotByDay1.equals(hotByDay0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:4dc19e876a18a815d95a1a20f19f8880
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      //Input_0_Object: hotByDay1
      //Assert: assertTrue(method_result);
      
      HotByDay hotByDay0 = new HotByDay();
      HotByDay hotByDay1 = new HotByDay();
      
      //Call method: equals
      boolean boolean0 = hotByDay0.equals(hotByDay1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:e65b7bb1f55c96e4c4e733764f8bd3fe
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: hashCode
      hotByDay0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDesc_05()  throws Throwable  {
      //caseID:ece50c3c5aea56b8416d7ee54c0ce5a6
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: , orderNum=
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setDesc
      hotByDay0.setDesc(", orderNum=");
      
      //Test Result Assert
      assertNull(hotByDay0.getId());
  }

  @Test(timeout = 9000)
  public void test_setDiscount_06()  throws Throwable  {
      //caseID:cedf1498ffbbf958bdabcae689c42d9b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: com.nbcb.entity.HotByDay
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setDiscount
      hotByDay0.setDiscount("com.nbcb.entity.HotByDay");
      
      //Test Result Assert
      assertNull(hotByDay0.getName());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:55bb79170394116e6ba9226e269ceba2
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: nh7R0TkUR4G9e=
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setId
      hotByDay0.setId("nh7R0TkUR4G9e=");
      
      //Test Result Assert
      assertNull(hotByDay0.getPrice());
  }

  @Test(timeout = 9000)
  public void test_setName_08()  throws Throwable  {
      //caseID:e310dbcdebc103fb242eee0db45397ee
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: , name=
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setName
      hotByDay0.setName(", name=");
      
      //Test Result Assert
      assertNull(hotByDay0.getPicture());
  }

  @Test(timeout = 9000)
  public void test_setOrderNum_09()  throws Throwable  {
      //caseID:133452a28697011455b4aec30af09c90
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_long: 3647
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setOrderNum
      hotByDay0.setOrderNum(3647L);
      
      //Test Result Assert
      assertNull(hotByDay0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setPicture_10()  throws Throwable  {
      //caseID:8f50c98d2ea6d3fce4641a34b6781d10
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: , name=
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setPicture
      hotByDay0.setPicture(", name=");
      
      //Test Result Assert
      assertEquals(", name=", hotByDay0.getPicture());
  }

  @Test(timeout = 9000)
  public void test_setPrice_11()  throws Throwable  {
      //caseID:0eae93ec7f04d17c5330f77f1c22307f
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: U$9%ekV^^oNv:'(
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: setPrice
      hotByDay0.setPrice("U$9%ekV^^oNv:'(");
      
      //Test Result Assert
      assertNull(hotByDay0.getId());
  }

  @Test(timeout = 9000)
  public void test_toString_12()  throws Throwable  {
      //caseID:a8c24b4370cd3b750851dd44f0320507
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      //Assert: assertEquals("HotByDay(desc=null, discount=null, id=null, name=null, orderNum=0, picture=null, price=null)", method_result);
      
      HotByDay hotByDay0 = new HotByDay();
      
      //Call method: toString
      String string0 = hotByDay0.toString();
      
      //Test Result Assert
      assertEquals("HotByDay(desc=null, discount=null, id=null, name=null, orderNum=0, picture=null, price=null)", string0);
  }
}
