/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.LoginResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class LoginResult_SSTest extends LoginResult_SSTest_scaffolding {
// allCoveredLines:[9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:01a5911967223d31a10df0ca10658703
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Object: loginResult0
      //Assert: assertTrue(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult0.equals(loginResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:8585f6b6d1bea15b113ccfc60a561420
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Object: 1
      //Assert: assertFalse(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:b2ca75eff0e434168c408ef764d987ad
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      //Input_0_Object: loginResult0
      //Assert: assertTrue(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      LoginResult loginResult1 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult1.equals(loginResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:55719d8c699c0fa7aa8695dd7254a10a
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      //Input_0_Object: loginResult1
      //Assert: assertTrue(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      LoginResult loginResult1 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult0.equals(loginResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:afff1e33e38859ddbed4d470e3f15827
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: hashCode
      loginResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAccount_05()  throws Throwable  {
      //caseID:26bcefb61cb73e0a14bf441470fe324a
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1.0
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setAccount
      loginResult0.setAccount("1.0");
      
      //Test Result Assert
      assertNull(loginResult0.getBirthday());
  }

  @Test(timeout = 9000)
  public void test_setAvatar_06()  throws Throwable  {
      //caseID:1e586163557cf4e8e355287eae58caea
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setAvatar
      loginResult0.setAvatar("");
      
      //Test Result Assert
      assertNull(loginResult0.getMobile());
  }

  @Test(timeout = 9000)
  public void test_setBirthday_07()  throws Throwable  {
      //caseID:1f7f307f3d1b38427c9d8d12d07b62fe
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: , birthday=
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setBirthday
      loginResult0.setBirthday(", birthday=");
      
      //Test Result Assert
      assertNull(loginResult0.getAccount());
  }

  @Test(timeout = 9000)
  public void test_setCityCode_08()  throws Throwable  {
      //caseID:9c34ebc38e4a80d9f21bddb0b8e12859
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setCityCode
      loginResult0.setCityCode("1");
      
      //Test Result Assert
      assertNull(loginResult0.getBirthday());
  }

  @Test(timeout = 9000)
  public void test_setGender_09()  throws Throwable  {
      //caseID:6153f5d53a931bad8447055d4139a83d
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: qr%UYV
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setGender
      loginResult0.setGender("qr%UYV");
      
      //Test Result Assert
      assertNull(loginResult0.getNickname());
  }

  @Test(timeout = 9000)
  public void test_setId_10()  throws Throwable  {
      //caseID:5a640373a08f24edbf29ed4a34e99817
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1.0
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setId
      loginResult0.setId("1.0");
      
      //Test Result Assert
      assertNull(loginResult0.getProfession());
  }

  @Test(timeout = 9000)
  public void test_setMobile_11()  throws Throwable  {
      //caseID:8c8e0844e951884b723df7a8301f8415
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: , gender=
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setMobile
      loginResult0.setMobile(", gender=");
      
      //Test Result Assert
      assertEquals(", gender=", loginResult0.getMobile());
  }

  @Test(timeout = 9000)
  public void test_setNickname_12()  throws Throwable  {
      //caseID:d28764bc243fd3d7f85e7b00e200cd39
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: , mobile=
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setNickname
      loginResult0.setNickname(", mobile=");
      
      //Test Result Assert
      assertNull(loginResult0.getGender());
  }

  @Test(timeout = 9000)
  public void test_setProfession_13()  throws Throwable  {
      //caseID:0ec6fca481f34fb840c7aee67c8410f2
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setProfession
      loginResult0.setProfession("1");
      
      //Test Result Assert
      assertNull(loginResult0.getGender());
  }

  @Test(timeout = 9000)
  public void test_setProvinceCode_14()  throws Throwable  {
      //caseID:53a2dd65dd3a469d1acf0b97bb2016c6
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: J]j&=i.}u
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setProvinceCode
      loginResult0.setProvinceCode("J]j&=i.}u");
      
      //Test Result Assert
      assertNull(loginResult0.getGender());
  }

  @Test(timeout = 9000)
  public void test_setToken_15()  throws Throwable  {
      //caseID:060c182df03178550b777062a563b724
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: !3#o8 
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setToken
      loginResult0.setToken("!3#o8 ");
      
      //Test Result Assert
      assertNull(loginResult0.getProvinceCode());
  }

  @Test(timeout = 9000)
  public void test_toString_16()  throws Throwable  {
      //caseID:a402bf0a9e98732136283ed63f49ec1a
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      //Assert: assertEquals("LoginResult(account=null, avatar=null, birthday=null, cityCode=null, gender=null, id=null, mobile=null, nickname=null, profession=null, provinceCode=null, token=null)", method_result);
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: toString
      String string0 = loginResult0.toString();
      
      //Test Result Assert
      assertEquals("LoginResult(account=null, avatar=null, birthday=null, cityCode=null, gender=null, id=null, mobile=null, nickname=null, profession=null, provinceCode=null, token=null)", string0);
  }
}
