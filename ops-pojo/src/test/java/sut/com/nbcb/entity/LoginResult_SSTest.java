/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.LoginResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class LoginResult_SSTest extends LoginResult_SSTest_scaffolding {
// allCoveredLines:[9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:9f20213d63d4dc3b785d5b214acdc2d7
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Object: 1
      //Assert: assertFalse(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:8c089801cfa395ca63d5885b706ad449
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Object: loginResult0
      //Assert: assertTrue(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult0.equals(loginResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:5227adfcc3013ffebb77c2f5fd4e6d6c
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      //Input_0_Object: loginResult0
      //Assert: assertTrue(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      LoginResult loginResult1 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult1.equals(loginResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:b67820dd0defe08022c6dfddcbc7bb70
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      //Input_0_Object: loginResult1
      //Assert: assertTrue(method_result);
      
      LoginResult loginResult0 = new LoginResult();
      LoginResult loginResult1 = new LoginResult();
      
      //Call method: equals
      boolean boolean0 = loginResult0.equals(loginResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:41abda0e38ec9c0832b4c6c9c696070c
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: hashCode
      loginResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAccount_05()  throws Throwable  {
      //caseID:69c7f56361c0ba5a26f05b2ee5e4b465
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setAccount
      loginResult0.setAccount("1");
      
      //Test Result Assert
      assertNull(loginResult0.getToken());
  }

  @Test(timeout = 9000)
  public void test_setAvatar_06()  throws Throwable  {
      //caseID:d76acae26f9f19188ea01915a72119b6
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setAvatar
      loginResult0.setAvatar("");
      
      //Test Result Assert
      assertNull(loginResult0.getGender());
  }

  @Test(timeout = 9000)
  public void test_setBirthday_07()  throws Throwable  {
      //caseID:b2b0589b62941e5982fd20603427acfd
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setBirthday
      loginResult0.setBirthday("");
      
      //Test Result Assert
      assertNull(loginResult0.getGender());
  }

  @Test(timeout = 9000)
  public void test_setCityCode_08()  throws Throwable  {
      //caseID:d7e8a67cbb9389b18ec46d5fa15f9928
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setCityCode
      loginResult0.setCityCode("1");
      
      //Test Result Assert
      assertNull(loginResult0.getProfession());
  }

  @Test(timeout = 9000)
  public void test_setGender_09()  throws Throwable  {
      //caseID:26c44b135f3245e4091dbb69c977d2b2
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: JNeK,D
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setGender
      loginResult0.setGender("JNeK,D");
      
      //Test Result Assert
      assertNull(loginResult0.getProvinceCode());
  }

  @Test(timeout = 9000)
  public void test_setId_10()  throws Throwable  {
      //caseID:5a1562d084063516742068a7aaecb408
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setId
      loginResult0.setId("1");
      
      //Test Result Assert
      assertNull(loginResult0.getProfession());
  }

  @Test(timeout = 9000)
  public void test_setMobile_11()  throws Throwable  {
      //caseID:36d6b2c05fa4ead7b5eb0a64ac318b53
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: , token=
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setMobile
      loginResult0.setMobile(", token=");
      
      //Test Result Assert
      assertNull(loginResult0.getProvinceCode());
  }

  @Test(timeout = 9000)
  public void test_setNickname_12()  throws Throwable  {
      //caseID:98d4a597b0904b4a671c16932813532c
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: =UAjl:zw&DaaXl{].6
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setNickname
      loginResult0.setNickname("=UAjl:zw&DaaXl{].6");
      
      //Test Result Assert
      assertEquals("=UAjl:zw&DaaXl{].6", loginResult0.getNickname());
  }

  @Test(timeout = 9000)
  public void test_setProfession_13()  throws Throwable  {
      //caseID:cb8502490586a3397b75abc9b3436c20
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1.0
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setProfession
      loginResult0.setProfession("1.0");
      
      //Test Result Assert
      assertNull(loginResult0.getToken());
  }

  @Test(timeout = 9000)
  public void test_setProvinceCode_14()  throws Throwable  {
      //caseID:716c97f2c3e8ea0982ad55c1b4720c12
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setProvinceCode
      loginResult0.setProvinceCode("");
      
      //Test Result Assert
      assertNull(loginResult0.getId());
  }

  @Test(timeout = 9000)
  public void test_setToken_15()  throws Throwable  {
      //caseID:905672c2cfba76faefcb62dd682c5040
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_String: 1.0
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: setToken
      loginResult0.setToken("1.0");
      
      //Test Result Assert
      assertNull(loginResult0.getId());
  }

  @Test(timeout = 9000)
  public void test_toString_16()  throws Throwable  {
      //caseID:3484165c2fc46b9a2669cc92d0b78fee
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54]
      //Assert: assertEquals("LoginResult(account=null, avatar=null, birthday=null, cityCode=null, gender=null, id=null, mobile=null, nickname=null, profession=null, provinceCode=null, token=null)", method_result);
      
      LoginResult loginResult0 = new LoginResult();
      
      //Call method: toString
      String string0 = loginResult0.toString();
      
      //Test Result Assert
      assertEquals("LoginResult(account=null, avatar=null, birthday=null, cityCode=null, gender=null, id=null, mobile=null, nickname=null, profession=null, provinceCode=null, token=null)", string0);
  }
}
