/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.MQEntity;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class MQEntity_SSTest extends MQEntity_SSTest_scaffolding {
// allCoveredLines:[6, 16, 20, 21, 24, 28, 29, 32, 36, 37, 40, 44, 45, 48, 52, 53, 56, 60, 61]

  @Test(timeout = 9000)
  public void test_getCouponId_00()  throws Throwable  {
      //caseID:84a74d03dcba0665d66e1733c0f70d10
      //CoveredLines: [6, 16]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getCouponId
      Long long0 = mQEntity0.getCouponId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getGoodsId_01()  throws Throwable  {
      //caseID:ca64f6804e540a44de24544b5090b684
      //CoveredLines: [6, 48]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getGoodsId
      Long long0 = mQEntity0.getGoodsId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getGoodsNumber_02()  throws Throwable  {
      //caseID:f9aea1c8e07ec3f4d400654aa093cfa7
      //CoveredLines: [6, 56]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getGoodsNumber
      Integer integer0 = mQEntity0.getGoodsNumber();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 9000)
  public void test_getOrderId_03()  throws Throwable  {
      //caseID:6440499ab78a81eda5661bb333c03e8f
      //CoveredLines: [6, 24]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getOrderId
      Long long0 = mQEntity0.getOrderId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserId_04()  throws Throwable  {
      //caseID:a2368eb61b353e65190561b89bb0f3dd
      //CoveredLines: [6, 32]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getUserId
      Long long0 = mQEntity0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserMoney_05()  throws Throwable  {
      //caseID:01fda5893a3b80fbe4a5739e345165f9
      //CoveredLines: [6, 40]
      //Assert: assertSame(method_result, bigDecimal0);
      
      MQEntity mQEntity0 = new MQEntity();
      BigDecimal bigDecimal0 = new BigDecimal((long) (-1));
      
      PrivateAccess.setVariable((Class<?>) MQEntity.class, mQEntity0, "userMoney", (Object) bigDecimal0);
      
      //Call method: getUserMoney
      BigDecimal bigDecimal1 = mQEntity0.getUserMoney();
      
      //Test Result Assert
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 9000)
  public void test_setCouponId_06()  throws Throwable  {
      //caseID:0b7e42b1babe02da57e0e3fa4f327d54
      //CoveredLines: [6, 20, 21]
      //Input_0_Long: 2508
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(2508);
      
      //Call method: setCouponId
      mQEntity0.setCouponId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getGoodsId());
  }

  @Test(timeout = 9000)
  public void test_setGoodsId_07()  throws Throwable  {
      //caseID:d9b666c04bf2fb244e011797d41d3a36
      //CoveredLines: [6, 52, 53]
      //Input_0_Long: 3118
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(3118);
      
      //Call method: setGoodsId
      mQEntity0.setGoodsId(long0);
      
      //Test Result Assert
      assertEquals(3118L, (long)mQEntity0.getGoodsId());
  }

  @Test(timeout = 9000)
  public void test_setGoodsNumber_08()  throws Throwable  {
      //caseID:9aecc93cc1b3507fd4b3d8fe5c88029b
      //CoveredLines: [6, 60, 61]
      //Input_0_Integer: 0
      
      MQEntity mQEntity0 = new MQEntity();
      Integer integer0 = new Integer(0);
      
      //Call method: setGoodsNumber
      mQEntity0.setGoodsNumber(integer0);
      
      //Test Result Assert
      assertNull(mQEntity0.getCouponId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_09()  throws Throwable  {
      //caseID:69fec5470ab777cd3903214c1e6bd996
      //CoveredLines: [6, 28, 29]
      //Input_0_Long: 0
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(0);
      
      //Call method: setOrderId
      mQEntity0.setOrderId(long0);
      
      //Test Result Assert
      assertEquals(0L, (long)mQEntity0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setUserId_10()  throws Throwable  {
      //caseID:7adf9a83ba4417dca4cae80366c28532
      //CoveredLines: [6, 36, 37]
      //Input_0_Long: 0
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(0);
      
      //Call method: setUserId
      mQEntity0.setUserId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setUserMoney_11()  throws Throwable  {
      //caseID:bb1266cfe1ac42752c2a9d0413aee0b9
      //CoveredLines: [6, 44, 45]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      MQEntity mQEntity0 = new MQEntity();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setUserMoney
      mQEntity0.setUserMoney(bigDecimal0);
      
      //Test Result Assert
      assertNull(mQEntity0.getGoodsId());
  }
}
