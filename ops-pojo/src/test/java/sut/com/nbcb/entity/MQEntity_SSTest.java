/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.MQEntity;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class MQEntity_SSTest extends MQEntity_SSTest_scaffolding {
// allCoveredLines:[6, 16, 20, 21, 24, 28, 29, 32, 36, 37, 40, 44, 45, 48, 52, 53, 56, 60, 61]

  @Test(timeout = 9000)
  public void test_getCouponId_00()  throws Throwable  {
      //caseID:329c9bd578db58068078b5f9d936b04a
      //CoveredLines: [6, 16]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getCouponId
      Long long0 = mQEntity0.getCouponId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getGoodsId_01()  throws Throwable  {
      //caseID:9f4cee782947e811608239bec177597b
      //CoveredLines: [6, 48]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getGoodsId
      Long long0 = mQEntity0.getGoodsId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getGoodsNumber_02()  throws Throwable  {
      //caseID:da974a917477df497f41f245902e2c3e
      //CoveredLines: [6, 56]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getGoodsNumber
      Integer integer0 = mQEntity0.getGoodsNumber();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 9000)
  public void test_getOrderId_03()  throws Throwable  {
      //caseID:b3f30837a704bba01b1b9bcd4526a8a3
      //CoveredLines: [6, 24]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getOrderId
      Long long0 = mQEntity0.getOrderId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserId_04()  throws Throwable  {
      //caseID:c9bdceb6889ed91fd9c05484392e94be
      //CoveredLines: [6, 32]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getUserId
      Long long0 = mQEntity0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserMoney_05()  throws Throwable  {
      //caseID:93ae03bf271f1bd78360f3ce6b69a708
      //CoveredLines: [6, 40]
      //Assert: assertSame(method_result, bigDecimal0);
      
      MQEntity mQEntity0 = new MQEntity();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      PrivateAccess.setVariable((Class<?>) MQEntity.class, mQEntity0, "userMoney", (Object) bigDecimal0);
      
      //Call method: getUserMoney
      BigDecimal bigDecimal1 = mQEntity0.getUserMoney();
      
      //Test Result Assert
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 9000)
  public void test_setCouponId_06()  throws Throwable  {
      //caseID:e629e520f50c8758ed624c628ac0a1f4
      //CoveredLines: [6, 20, 21]
      //Input_0_Long: (-1)
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long((-1));
      
      //Call method: setCouponId
      mQEntity0.setCouponId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setGoodsId_07()  throws Throwable  {
      //caseID:ca23943b524363f97b9cd5ebf8df2114
      //CoveredLines: [6, 52, 53]
      //Input_0_Long: (-1)
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long((-1));
      
      //Call method: setGoodsId
      mQEntity0.setGoodsId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setGoodsNumber_08()  throws Throwable  {
      //caseID:67ab4ae780b372d2212cf7eb61880aa1
      //CoveredLines: [6, 60, 61]
      //Input_0_Integer: 11
      
      MQEntity mQEntity0 = new MQEntity();
      Integer integer0 = new Integer(11);
      
      //Call method: setGoodsNumber
      mQEntity0.setGoodsNumber(integer0);
      
      //Test Result Assert
      assertNull(mQEntity0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_09()  throws Throwable  {
      //caseID:053971717a922c860f0a9af92090fe83
      //CoveredLines: [6, 28, 29]
      //Input_0_Long: 2
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(2);
      
      //Call method: setOrderId
      mQEntity0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserId_10()  throws Throwable  {
      //caseID:d06dee430103d207442462de32780d96
      //CoveredLines: [6, 36, 37]
      //Input_0_Long: 6
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(6);
      
      //Call method: setUserId
      mQEntity0.setUserId(long0);
      
      //Test Result Assert
      assertEquals(6L, (long)mQEntity0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserMoney_11()  throws Throwable  {
      //caseID:6bd64ae5cf62ea2fe80ebc60fb4ebfc1
      //CoveredLines: [6, 44, 45]
      //Input_0_BigDecimal: BigDecimal.ZERO
      
      MQEntity mQEntity0 = new MQEntity();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setUserMoney
      mQEntity0.setUserMoney(bigDecimal0);
      
      //Test Result Assert
      assertNull(mQEntity0.getGoodsId());
  }
}
