/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.MQEntity;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class MQEntity_SSTest extends MQEntity_SSTest_scaffolding {
// allCoveredLines:[6, 16, 20, 21, 24, 28, 29, 32, 36, 37, 40, 44, 45, 48, 52, 53, 56, 60, 61]

  @Test(timeout = 9000)
  public void test_getCouponId_00()  throws Throwable  {
      //caseID:410210f89d9084b7459802d23ba6eaae
      //CoveredLines: [6, 16]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getCouponId
      Long long0 = mQEntity0.getCouponId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getGoodsId_01()  throws Throwable  {
      //caseID:d3f249eff5badb4bf32ad0078972e153
      //CoveredLines: [6, 48]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getGoodsId
      Long long0 = mQEntity0.getGoodsId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getGoodsNumber_02()  throws Throwable  {
      //caseID:feb5cf5d4171692c187e4c23b394d5bd
      //CoveredLines: [6, 56]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getGoodsNumber
      Integer integer0 = mQEntity0.getGoodsNumber();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 9000)
  public void test_getOrderId_03()  throws Throwable  {
      //caseID:58ce307e7433c2bfd8500db5a0d46767
      //CoveredLines: [6, 24]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getOrderId
      Long long0 = mQEntity0.getOrderId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserId_04()  throws Throwable  {
      //caseID:706de37b5a8c321ffecb02fcd9548022
      //CoveredLines: [6, 32]
      //Assert: assertNull(method_result);
      
      MQEntity mQEntity0 = new MQEntity();
      
      //Call method: getUserId
      Long long0 = mQEntity0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserMoney_05()  throws Throwable  {
      //caseID:cdace4f0a46bd129bfce8845a7c9d52c
      //CoveredLines: [6, 40]
      //Assert: assertSame(method_result, bigDecimal0);
      
      MQEntity mQEntity0 = new MQEntity();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      PrivateAccess.setVariable((Class<?>) MQEntity.class, mQEntity0, "userMoney", (Object) bigDecimal0);
      
      //Call method: getUserMoney
      BigDecimal bigDecimal1 = mQEntity0.getUserMoney();
      
      //Test Result Assert
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 9000)
  public void test_setCouponId_06()  throws Throwable  {
      //caseID:0527cd44bbf6d755dc3ec620af2e4bea
      //CoveredLines: [6, 20, 21]
      //Input_0_Long: 1
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(1);
      
      //Call method: setCouponId
      mQEntity0.setCouponId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getGoodsNumber());
  }

  @Test(timeout = 9000)
  public void test_setGoodsId_07()  throws Throwable  {
      //caseID:f90a7c5c51654844dea8de0876c5ab59
      //CoveredLines: [6, 52, 53]
      //Input_0_Long: 1
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(1);
      
      //Call method: setGoodsId
      mQEntity0.setGoodsId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getCouponId());
  }

  @Test(timeout = 9000)
  public void test_setGoodsNumber_08()  throws Throwable  {
      //caseID:821bf68e739f6aab00e17c426fd8b0f3
      //CoveredLines: [6, 60, 61]
      //Input_0_Integer: (-1)
      
      MQEntity mQEntity0 = new MQEntity();
      Integer integer0 = new Integer((-1));
      
      //Call method: setGoodsNumber
      mQEntity0.setGoodsNumber(integer0);
      
      //Test Result Assert
      assertNull(mQEntity0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_09()  throws Throwable  {
      //caseID:db8fa2e175804afa9347f7a94d8a8347
      //CoveredLines: [6, 28, 29]
      //Input_0_Long: 560
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(560);
      
      //Call method: setOrderId
      mQEntity0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(mQEntity0.getGoodsNumber());
  }

  @Test(timeout = 9000)
  public void test_setUserId_10()  throws Throwable  {
      //caseID:9d19437b008a65695dddf4471f5b1b54
      //CoveredLines: [6, 36, 37]
      //Input_0_Long: 1
      
      MQEntity mQEntity0 = new MQEntity();
      Long long0 = new Long(1);
      
      //Call method: setUserId
      mQEntity0.setUserId(long0);
      
      //Test Result Assert
      assertEquals(1L, (long)mQEntity0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserMoney_11()  throws Throwable  {
      //caseID:b5e440e2b669d04f848b7f946b74ff95
      //CoveredLines: [6, 44, 45]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      MQEntity mQEntity0 = new MQEntity();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setUserMoney
      mQEntity0.setUserMoney(bigDecimal0);
      
      //Test Result Assert
      assertEquals((byte)1, bigDecimal0.byteValue());
  }
}
