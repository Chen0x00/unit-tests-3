/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.entity.OrderPreResponse;
import com.nbcb.entity.OrderPreResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderPreResponse_SSTest extends OrderPreResponse_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:2bcac82668102dfe959883660b67ba05
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 
      //Assert: assertFalse(method_result);
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      
      //Call method: equals
      boolean boolean0 = orderPreResponse0.equals("");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:b43d6770263578fbbe34a359e0831a03
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: orderPreResponse0
      //Assert: assertTrue(method_result);
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      
      //Call method: equals
      boolean boolean0 = orderPreResponse0.equals(orderPreResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:7b4c33d73625da7926e74d8b01e4c8d0
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Input_0_Object: orderPreResponse0
      //Assert: assertTrue(method_result);
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      OrderPreResponse orderPreResponse1 = new OrderPreResponse();
      
      //Call method: equals
      boolean boolean0 = orderPreResponse1.equals(orderPreResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:39eeee50236da3e7790790336c2495d1
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Input_0_Object: orderPreResponse1
      //Assert: assertTrue(method_result);
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      OrderPreResponse orderPreResponse1 = new OrderPreResponse();
      
      //Call method: equals
      boolean boolean0 = orderPreResponse0.equals(orderPreResponse1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:46db630cdf3acb9310a48fa080d1204a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      
      //Call method: hashCode
      orderPreResponse0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCode_5()  throws Throwable  {
      //caseID:03ec4c17ff1a78b358a31a5afa75d9a5
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: newLast
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      
      //Call method: setCode
      orderPreResponse0.setCode("newLast");
      
      //Test Result Assert
      assertEquals("newLast", orderPreResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setMsg_6()  throws Throwable  {
      //caseID:e12417a74404ca2a2ea6aa46bc6bda64
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 6kM7[1c7O0A1OC
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      
      //Call method: setMsg
      orderPreResponse0.setMsg("6kM7[1c7O0A1OC");
      
      //Test Result Assert
      assertNull(orderPreResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setResult_7()  throws Throwable  {
      //caseID:2a38134c8760e3825c0253a6b9c7f606
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_OrderPreResult: {}
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      //mock orderPreResult0
      OrderPreResult orderPreResult0 = mock(OrderPreResult.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setResult
      orderPreResponse0.setResult(orderPreResult0);
      
      //Test Result Assert
      assertNull(orderPreResponse0.getMsg());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:2a3a56a89d9695fc59bed979a41581bc
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Assert: assertEquals("OrderPreResponse(code=null, msg=null, result=null)", method_result);
      
      OrderPreResponse orderPreResponse0 = new OrderPreResponse();
      
      //Call method: toString
      String string0 = orderPreResponse0.toString();
      
      //Test Result Assert
      assertEquals("OrderPreResponse(code=null, msg=null, result=null)", string0);
  }
}
