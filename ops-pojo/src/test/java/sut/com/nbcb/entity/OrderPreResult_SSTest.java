/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.entity.OrderPreResult;
import com.nbcb.entity.Summary;
import com.nbcb.entity.UserAddress;
import com.nbcb.pojo.ShopGoods;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderPreResult_SSTest extends OrderPreResult_SSTest_scaffolding {
// allCoveredLines:[10, 15, 19, 23]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:a8de476763b70f5e649a9bf494762d99
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = orderPreResult0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:6f5e9362bcd54e0ade5316a151f335cd
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Object: orderPreResult0
      //Assert: assertTrue(method_result);
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      
      //Call method: equals
      boolean boolean0 = orderPreResult0.equals(orderPreResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:d7462213dadf4c52146b53df0de33365
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 15, 19, 23]
      //Input_0_Object: orderPreResult0
      //Assert: assertTrue(method_result);
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      OrderPreResult orderPreResult1 = new OrderPreResult();
      
      //Call method: equals
      boolean boolean0 = orderPreResult1.equals(orderPreResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:e519750bd98f578cf4f4b671aa9c5708
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 15, 19, 23]
      //Input_0_Object: orderPreResult1
      //Assert: assertTrue(method_result);
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      OrderPreResult orderPreResult1 = new OrderPreResult();
      
      //Call method: equals
      boolean boolean0 = orderPreResult0.equals(orderPreResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:a8be2ed51fbd6f80edf078ec147dfd02
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 15, 19, 23]
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      
      //Call method: hashCode
      orderPreResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setGoods_5()  throws Throwable  {
      //caseID:73eb6627818462d7bf13e46913c69a50
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_ShopGoods: {}
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      //mock shopGoods0
      ShopGoods shopGoods0 = mock(ShopGoods.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setGoods
      orderPreResult0.setGoods(shopGoods0);
  }

  @Test(timeout = 9000)
  public void test_setSummary_6()  throws Throwable  {
      //caseID:84f6078b5e9af13718d440acc9e8bcf5
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_Summary: {}
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      //mock summary0
      Summary summary0 = mock(Summary.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setSummary
      orderPreResult0.setSummary(summary0);
  }

  @Test(timeout = 9000)
  public void test_setUserAddress_7()  throws Throwable  {
      //caseID:b9a32c75f988bdd39cb61ace079e4225
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10]
      //Input_0_UserAddress: {}
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      //mock userAddress0
      UserAddress userAddress0 = mock(UserAddress.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setUserAddress
      orderPreResult0.setUserAddress(userAddress0);
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:fb85c8a7f13202e9500fc7e884312db0
      //CoveredLines: [10, 10, 10, 10, 10, 10, 10, 10, 15, 19, 23]
      //Assert: assertEquals("OrderPreResult(goods=null, summary=null, userAddress=null)", method_result);
      
      OrderPreResult orderPreResult0 = new OrderPreResult();
      
      //Call method: toString
      String string0 = orderPreResult0.toString();
      
      //Test Result Assert
      assertEquals("OrderPreResult(goods=null, summary=null, userAddress=null)", string0);
  }
}
