/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.entity.OrderQueryResponse;
import com.nbcb.pojo.ShopOrder;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderQueryResponse_SSTest extends OrderQueryResponse_SSTest_scaffolding {
// allCoveredLines:[7, 12, 16, 20]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:2a739f6f6879c8d6078164926eebd329
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: 
      //Assert: assertFalse(method_result);
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      
      //Call method: equals
      boolean boolean0 = orderQueryResponse0.equals("");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:9cf46faf1c5cfdbbc129b96dcd0040a6
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: orderQueryResponse0
      //Assert: assertTrue(method_result);
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      
      //Call method: equals
      boolean boolean0 = orderQueryResponse0.equals(orderQueryResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:dbf4b91e8c1fa7dd15acdc54d0a13350
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: orderQueryResponse0
      //Assert: assertTrue(method_result);
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      OrderQueryResponse orderQueryResponse1 = new OrderQueryResponse();
      
      //Call method: equals
      boolean boolean0 = orderQueryResponse1.equals(orderQueryResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:272be5aadc75c54d84fb09698c44aefd
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: orderQueryResponse1
      //Assert: assertTrue(method_result);
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      OrderQueryResponse orderQueryResponse1 = new OrderQueryResponse();
      
      //Call method: equals
      boolean boolean0 = orderQueryResponse0.equals(orderQueryResponse1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:f7d02b6b03b2590ec53d50a13c9dc709
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      
      //Call method: hashCode
      orderQueryResponse0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCode_5()  throws Throwable  {
      //caseID:b3312f94056bd372226995128f41dc7a
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: ; Path=
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      
      //Call method: setCode
      orderQueryResponse0.setCode("; Path=");
      
      //Test Result Assert
      assertNull(orderQueryResponse0.getMsg());
  }

  @Test(timeout = 9000)
  public void test_setMsg_6()  throws Throwable  {
      //caseID:7f897e337a206767f6f8104fb8299bea
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 43
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      
      //Call method: setMsg
      orderQueryResponse0.setMsg("43");
      
      //Test Result Assert
      assertNull(orderQueryResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setResult_7()  throws Throwable  {
      //caseID:7c5cd601cfb0f9c0a9c382f242278ad7
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_ShopOrder: {}
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      //mock shopOrder0
      ShopOrder shopOrder0 = mock(ShopOrder.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setResult
      orderQueryResponse0.setResult(shopOrder0);
      
      //Test Result Assert
      assertNull(orderQueryResponse0.getMsg());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:359136f71e77cb8faf08a19fbbf4e5f8
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Assert: assertEquals("OrderQueryResponse(code=null, msg=null, result=null)", method_result);
      
      OrderQueryResponse orderQueryResponse0 = new OrderQueryResponse();
      
      //Call method: toString
      String string0 = orderQueryResponse0.toString();
      
      //Test Result Assert
      assertEquals("OrderQueryResponse(code=null, msg=null, result=null)", string0);
  }
}
