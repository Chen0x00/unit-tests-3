/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.entity.OrderResponse;
import com.nbcb.entity.OrderResultString;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderResponse_SSTest extends OrderResponse_SSTest_scaffolding {
// allCoveredLines:[4, 9, 13, 17]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:1d35bede871dba95fa0b11c7ca4900b3
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4]
      //Input_0_Object: , msg=
      //Assert: assertFalse(method_result);
      
      OrderResponse orderResponse0 = new OrderResponse();
      
      //Call method: equals
      boolean boolean0 = orderResponse0.equals(", msg=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:6fbdf74c2b67b2c8b907a844c0d196ee
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4]
      //Input_0_Object: orderResponse0
      //Assert: assertTrue(method_result);
      
      OrderResponse orderResponse0 = new OrderResponse();
      
      //Call method: equals
      boolean boolean0 = orderResponse0.equals(orderResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:1de2bf621b0f2fba1e18a39a0966fb10
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4, 9, 13, 17]
      //Input_0_Object: orderResponse0
      //Assert: assertTrue(method_result);
      
      OrderResponse orderResponse0 = new OrderResponse();
      OrderResponse orderResponse1 = new OrderResponse();
      
      //Call method: equals
      boolean boolean0 = orderResponse1.equals(orderResponse0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:baf2e8f8d7fbba67aee58b924881a5b1
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4, 9, 13, 17]
      //Input_0_Object: orderResponse1
      //Assert: assertTrue(method_result);
      
      OrderResponse orderResponse0 = new OrderResponse();
      OrderResponse orderResponse1 = new OrderResponse();
      
      //Call method: equals
      boolean boolean0 = orderResponse0.equals(orderResponse1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:acc7e4529849e934eadcb7dc0372a8db
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4, 9, 13, 17]
      
      OrderResponse orderResponse0 = new OrderResponse();
      
      //Call method: hashCode
      orderResponse0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCode_5()  throws Throwable  {
      //caseID:7d045700222aaa971e17ed2749f4f6f2
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4]
      //Input_0_String: , msg=
      
      OrderResponse orderResponse0 = new OrderResponse();
      
      //Call method: setCode
      orderResponse0.setCode(", msg=");
      
      //Test Result Assert
      assertEquals(", msg=", orderResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setMsg_6()  throws Throwable  {
      //caseID:a8ee869933af1d341212093656fc0917
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4]
      //Input_0_String: )
      
      OrderResponse orderResponse0 = new OrderResponse();
      
      //Call method: setMsg
      orderResponse0.setMsg(")");
      
      //Test Result Assert
      assertNull(orderResponse0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setResult_7()  throws Throwable  {
      //caseID:75ad686c05fad0330287db6f9590d499
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4]
      //Input_0_OrderResultString: {}
      
      OrderResponse orderResponse0 = new OrderResponse();
      //mock orderResultString0
      OrderResultString orderResultString0 = mock(OrderResultString.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setResult
      orderResponse0.setResult(orderResultString0);
      
      //Test Result Assert
      assertNull(orderResponse0.getMsg());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:527ea15cdd233a791a5f97e2a59411aa
      //CoveredLines: [4, 4, 4, 4, 4, 4, 4, 4, 9, 13, 17]
      //Assert: assertEquals("OrderResponse(code=null, msg=null, result=null)", method_result);
      
      OrderResponse orderResponse0 = new OrderResponse();
      
      //Call method: toString
      String string0 = orderResponse0.toString();
      
      //Test Result Assert
      assertEquals("OrderResponse(code=null, msg=null, result=null)", string0);
  }
}
