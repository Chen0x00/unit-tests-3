/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.OrderResultString;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderResultString_SSTest extends OrderResultString_SSTest_scaffolding {
// allCoveredLines:[7, 9, 10, 11, 12, 13]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:d7ee4e35faae49d6a9fa70f5ab35cb9a
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: orderResultString0
      //Assert: assertTrue(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString0.equals(orderResultString0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:939c4fe484c53bce9ee8b1b3285f230f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: 1.0
      //Assert: assertFalse(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString0.equals("1.0");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:140e71d8e4efb26ac54b61edd838c681
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResultString0
      //Assert: assertTrue(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      OrderResultString orderResultString1 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString1.equals(orderResultString0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:eb7cc2e43e261bc9bfffb25ae650a1cf
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResultString1
      //Assert: assertTrue(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      OrderResultString orderResultString1 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString0.equals(orderResultString1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:dc0cd5eddee861b46cbc7e18559e8200
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: hashCode
      orderResultString0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_05()  throws Throwable  {
      //caseID:f94ed9d3f5ddfb8b66f76fa6ec3692d1
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: .Gma
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: setMessage
      orderResultString0.setMessage(".Gma");
      
      //Test Result Assert
      assertNull(orderResultString0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_06()  throws Throwable  {
      //caseID:636dcedeb178eedd1c24f68a7f23e256
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: OrderResultString(message=
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: setOrderId
      orderResultString0.setOrderId("OrderResultString(message=");
      
      //Test Result Assert
      assertNull(orderResultString0.getSourceCode());
  }

  @Test(timeout = 9000)
  public void test_setPayAmount_07()  throws Throwable  {
      //caseID:dac34e64caaf3de87f3cd00bdd42945e
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_BigDecimal: BigDecimal.ZERO
      
      OrderResultString orderResultString0 = new OrderResultString();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setPayAmount
      orderResultString0.setPayAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(orderResultString0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setSourceCode_08()  throws Throwable  {
      //caseID:9939c7d1b8eb25ca77f5103a28625e2d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: , status=
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: setSourceCode
      orderResultString0.setSourceCode(", status=");
      
      //Test Result Assert
      assertNull(orderResultString0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_setStatus_09()  throws Throwable  {
      //caseID:1e28d3ed8593c2bb2e510659024171a9
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Boolean: Boolean.TRUE
      
      OrderResultString orderResultString0 = new OrderResultString();
      Boolean boolean0 = Boolean.TRUE;
      
      //Call method: setStatus
      orderResultString0.setStatus(boolean0);
      
      //Test Result Assert
      assertNull(orderResultString0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:be979f7a217962c58797f97724647009
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Assert: assertEquals("OrderResultString(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: toString
      String string0 = orderResultString0.toString();
      
      //Test Result Assert
      assertEquals("OrderResultString(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", string0);
  }
}
