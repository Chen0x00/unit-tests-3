/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.OrderResultString;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderResultString_SSTest extends OrderResultString_SSTest_scaffolding {
// allCoveredLines:[7, 9, 10, 11, 12, 13]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:5b3c295fd0bf4c498394cebe8aebcd12
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: 1
      //Assert: assertFalse(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:086a3f988742ce8d6268392f9a682057
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: orderResultString0
      //Assert: assertTrue(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString0.equals(orderResultString0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:a937849e226c39d991c62d19523f13f1
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResultString0
      //Assert: assertTrue(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      OrderResultString orderResultString1 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString1.equals(orderResultString0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:9f8a195946ab48bf9e2e8324d5e9b7d6
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResultString1
      //Assert: assertTrue(method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      OrderResultString orderResultString1 = new OrderResultString();
      
      //Call method: equals
      boolean boolean0 = orderResultString0.equals(orderResultString1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:aa6d3face5144825d1e467c9f44dc76f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: hashCode
      orderResultString0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_05()  throws Throwable  {
      //caseID:5245a5b006b742bae6e65bee93d9759b
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 1.0
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: setMessage
      orderResultString0.setMessage("1.0");
      
      //Test Result Assert
      assertNull(orderResultString0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_06()  throws Throwable  {
      //caseID:ef722bc52b119a1affa5b13ab02c6879
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 1.0
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: setOrderId
      orderResultString0.setOrderId("1.0");
      
      //Test Result Assert
      assertNull(orderResultString0.getSourceCode());
  }

  @Test(timeout = 9000)
  public void test_setPayAmount_07()  throws Throwable  {
      //caseID:9f78a7ccacc0a6483a39ea03f6d22d1e
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_BigDecimal: 0
      
      OrderResultString orderResultString0 = new OrderResultString();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      
      //Call method: setPayAmount
      orderResultString0.setPayAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(orderResultString0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setSourceCode_08()  throws Throwable  {
      //caseID:6d8dfbd66205cf339ea97fa330638151
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: hJS=
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: setSourceCode
      orderResultString0.setSourceCode("hJS=");
      
      //Test Result Assert
      assertNull(orderResultString0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setStatus_09()  throws Throwable  {
      //caseID:1c618c02f0a4c7d31a601097d08aa37e
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Boolean: Boolean.FALSE
      
      OrderResultString orderResultString0 = new OrderResultString();
      Boolean boolean0 = Boolean.FALSE;
      
      //Call method: setStatus
      orderResultString0.setStatus(boolean0);
      
      //Test Result Assert
      assertNull(orderResultString0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:953e8a5ea8bc527359dfdc8d3a7e0b1c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Assert: assertEquals("OrderResultString(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", method_result);
      
      OrderResultString orderResultString0 = new OrderResultString();
      
      //Call method: toString
      String string0 = orderResultString0.toString();
      
      //Test Result Assert
      assertEquals("OrderResultString(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", string0);
  }
}
