/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.OrderResult;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderResult_SSTest extends OrderResult_SSTest_scaffolding {
// allCoveredLines:[7, 9, 10, 11, 12, 13]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:9f90ec0ea20f6a00ede5afbecf182dfb
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: 59
      //Assert: assertFalse(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals("59");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:691d9bdb6c2b46b372bd1b1ea0f0e21c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: orderResult0
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(orderResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:a91ae458356af98715290839b3033066
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResult0
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      OrderResult orderResult1 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult1.equals(orderResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:201387edd0e98a904d0cda109dabdfe2
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResult1
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      OrderResult orderResult1 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(orderResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:a9a01592c477d69625c26198ab934652
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: hashCode
      orderResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_05()  throws Throwable  {
      //caseID:cb205b8b8f899e0f1bc601e9f817b12b
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: setMessage
      orderResult0.setMessage("");
      
      //Test Result Assert
      assertNull(orderResult0.getSourceCode());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_06()  throws Throwable  {
      //caseID:28040cea586b826f1c503d1b7a6dd400
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Long: 2312L
      
      OrderResult orderResult0 = new OrderResult();
      Long long0 = new Long(2312L);
      
      //Call method: setOrderId
      orderResult0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(orderResult0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_setPayAmount_07()  throws Throwable  {
      //caseID:5ca8a547ee4e1cd47bc80cfd5ebbf1f2
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      OrderResult orderResult0 = new OrderResult();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setPayAmount
      orderResult0.setPayAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(orderResult0.getSourceCode());
  }

  @Test(timeout = 9000)
  public void test_setSourceCode_08()  throws Throwable  {
      //caseID:c2efa7c97579fbfc7fac6e529b61b34c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 1.0
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: setSourceCode
      orderResult0.setSourceCode("1.0");
      
      //Test Result Assert
      assertNull(orderResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setStatus_09()  throws Throwable  {
      //caseID:d4789a59cb6447698d2ec98bbf9a5b8a
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Boolean: Boolean.FALSE
      
      OrderResult orderResult0 = new OrderResult();
      Boolean boolean0 = Boolean.FALSE;
      
      //Call method: setStatus
      orderResult0.setStatus(boolean0);
      
      //Test Result Assert
      assertNull(orderResult0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:c838b6fc2aa72b6a76109dbaa2ba5b7f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Assert: assertEquals("OrderResult(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: toString
      String string0 = orderResult0.toString();
      
      //Test Result Assert
      assertEquals("OrderResult(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", string0);
  }
}
