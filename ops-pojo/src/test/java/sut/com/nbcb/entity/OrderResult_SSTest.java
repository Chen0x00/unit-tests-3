/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.OrderResult;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderResult_SSTest extends OrderResult_SSTest_scaffolding {
// allCoveredLines:[7, 9, 10, 11, 12, 13]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:962049b7b5698b83bfc12f6d9d2e1359
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: orderResult0
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(orderResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:3150e7033acafa4987aea4de0952f18d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: Boolean.TRUE
      //Assert: assertFalse(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      Boolean boolean0 = Boolean.TRUE;
      
      //Call method: equals
      boolean boolean1 = orderResult0.equals(boolean0);
      
      //Test Result Assert
      assertFalse(boolean1);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:9d42fcdbf2e7a03da15cc9193d26fa3b
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResult0
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      OrderResult orderResult1 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult1.equals(orderResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:12d8f583a50f250c116c5eb2a9d391af
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResult1
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      OrderResult orderResult1 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(orderResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:bc862c44741e63b7be07ae0be2370670
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: hashCode
      orderResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_05()  throws Throwable  {
      //caseID:5b2e3e87272bfc6f330f98da752557e6
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: *c$E%-X`Io4xWj{U6
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: setMessage
      orderResult0.setMessage("*c$E%-X`Io4xWj{U6");
      
      //Test Result Assert
      assertNull(orderResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_06()  throws Throwable  {
      //caseID:66ad2a58eee96243fbcfe16e3dd6016e
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Long: 0L
      
      OrderResult orderResult0 = new OrderResult();
      Long long0 = new Long(0L);
      
      //Call method: setOrderId
      orderResult0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(orderResult0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_setPayAmount_07()  throws Throwable  {
      //caseID:e68f794db315755e2174601a65e0ed36
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_BigDecimal: BigDecimal.ZERO
      
      OrderResult orderResult0 = new OrderResult();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      //Call method: setPayAmount
      orderResult0.setPayAmount(bigDecimal0);
      
      //Test Result Assert
      assertNull(orderResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setSourceCode_08()  throws Throwable  {
      //caseID:83a1bb24a170731728e5f89b783ffb8f
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: kw@<`RsVD
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: setSourceCode
      orderResult0.setSourceCode("kw@<`RsVD");
      
      //Test Result Assert
      assertNull(orderResult0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setStatus_09()  throws Throwable  {
      //caseID:0043077a8b5233cd90696eb874317871
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Boolean: Boolean.FALSE
      
      OrderResult orderResult0 = new OrderResult();
      Boolean boolean0 = Boolean.FALSE;
      
      //Call method: setStatus
      orderResult0.setStatus(boolean0);
      
      //Test Result Assert
      assertNull(orderResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:43fb20f8cb82c57bf22f3b511ccedc8d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Assert: assertEquals("OrderResult(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: toString
      String string0 = orderResult0.toString();
      
      //Test Result Assert
      assertEquals("OrderResult(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", string0);
  }
}
