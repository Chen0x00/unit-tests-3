/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.OrderResult;
import java.math.BigDecimal;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class OrderResult_SSTest extends OrderResult_SSTest_scaffolding {
// allCoveredLines:[7, 9, 10, 11, 12, 13]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:7d17f2ecec08ec7878160aa53be99644
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: orderResult0
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(orderResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:125504077d57cdc95d02fb8f0c4793a0
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: BigDecimal.ONE
      //Assert: assertFalse(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(bigDecimal0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:6fd62198ff4bdbc550d6c4035c5a1715
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResult0
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      OrderResult orderResult1 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult1.equals(orderResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:edf8037e25747c410a154d326ddca389
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Input_0_Object: orderResult1
      //Assert: assertTrue(method_result);
      
      OrderResult orderResult0 = new OrderResult();
      OrderResult orderResult1 = new OrderResult();
      
      //Call method: equals
      boolean boolean0 = orderResult0.equals(orderResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:d2112f41526ef533256f313740b56186
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: hashCode
      orderResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_05()  throws Throwable  {
      //caseID:fd4d429badc6ac428aa414b7c52bed13
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: eS%]TVMij`5JM+K(.
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: setMessage
      orderResult0.setMessage("eS%]TVMij`5JM+K(.");
      
      //Test Result Assert
      assertNull(orderResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_06()  throws Throwable  {
      //caseID:a421ca42487c70d288177b5546134fbb
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Long: 0L
      
      OrderResult orderResult0 = new OrderResult();
      Long long0 = new Long(0L);
      
      //Call method: setOrderId
      orderResult0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(orderResult0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setPayAmount_07()  throws Throwable  {
      //caseID:a7b60ab468442f5e58c31fdab3f00450
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_BigDecimal: 2909
      
      OrderResult orderResult0 = new OrderResult();
      BigDecimal bigDecimal0 = new BigDecimal(2909);
      
      //Call method: setPayAmount
      orderResult0.setPayAmount(bigDecimal0);
      
      //Test Result Assert
      assertEquals((short)2909, bigDecimal0.shortValue());
  }

  @Test(timeout = 9000)
  public void test_setSourceCode_08()  throws Throwable  {
      //caseID:10f578308cea25d913ab08d80ccd4456
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: , orderId=
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: setSourceCode
      orderResult0.setSourceCode(", orderId=");
      
      //Test Result Assert
      assertNull(orderResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setStatus_09()  throws Throwable  {
      //caseID:069330caaba9cb5dd19775a5b605880d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Boolean: Boolean.TRUE
      
      OrderResult orderResult0 = new OrderResult();
      Boolean boolean0 = Boolean.TRUE;
      
      //Call method: setStatus
      orderResult0.setStatus(boolean0);
      
      //Test Result Assert
      assertNull(orderResult0.getSourceCode());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:8bd04bcafdf8c146c9fceb42a942a713
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 10, 11, 12, 13]
      //Assert: assertEquals("OrderResult(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", method_result);
      
      OrderResult orderResult0 = new OrderResult();
      
      //Call method: toString
      String string0 = orderResult0.toString();
      
      //Test Result Assert
      assertEquals("OrderResult(message=null, orderId=null, status=null, payAmount=null, sourceCode=null)", string0);
  }
}
