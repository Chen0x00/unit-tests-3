/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Parent;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Parent_SSTest extends Parent_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18, 22]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:558af17cd9b59ec6468c6cdb4f18118b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: parent0
      //Assert: assertTrue(method_result);
      
      Parent parent0 = new Parent();
      
      //Call method: equals
      boolean boolean0 = parent0.equals(parent0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:1f3e77afc5bf8a0ebf22292e035fcfb6
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: '%?{N6kR/\":#$hSPM~
      //Assert: assertFalse(method_result);
      
      Parent parent0 = new Parent();
      
      //Call method: equals
      boolean boolean0 = parent0.equals("'%?{N6kR/\":#$hSPM~");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:5c1b3c0776caa077494609b174a654d1
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22]
      //Input_0_Object: parent1
      //Assert: assertTrue(method_result);
      
      Parent parent0 = new Parent();
      Parent parent1 = new Parent();
      
      //Call method: equals
      boolean boolean0 = parent0.equals(parent1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_3()  throws Throwable  {
      //caseID:0c63cfac1cb8839863af6b79bbdddf72
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22]
      
      Parent parent0 = new Parent();
      
      //Call method: hashCode
      parent0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setId_4()  throws Throwable  {
      //caseID:e045e4798367fe06cdad9f79d64ff960
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      Parent parent0 = new Parent();
      
      //Call method: setId
      parent0.setId("1.0");
      
      //Test Result Assert
      assertEquals("1.0", parent0.getId());
  }

  @Test(timeout = 9000)
  public void test_setLayer_5()  throws Throwable  {
      //caseID:d8d75af5f06f59d531119987fe8c73ad
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_long: 2104
      
      Parent parent0 = new Parent();
      
      //Call method: setLayer
      parent0.setLayer(2104L);
      
      //Test Result Assert
      assertNull(parent0.getId());
  }

  @Test(timeout = 9000)
  public void test_setName_6()  throws Throwable  {
      //caseID:55efdf13da4ea8191faf9295a0d5ec3a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: )
      
      Parent parent0 = new Parent();
      
      //Call method: setName
      parent0.setName(")");
      
      //Test Result Assert
      assertNull(parent0.getId());
  }

  @Test(timeout = 9000)
  public void test_setParent_7()  throws Throwable  {
      //caseID:68fd3a98adbc353de85274502314f3f7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: parent0
      
      Parent parent0 = new Parent();
      
      //Call method: setParent
      parent0.setParent(parent0);
      
      //Test Result Assert
      assertNull(parent0.getId());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:4e9d96f58940d968fcad9979fc789c66
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22]
      //Assert: assertEquals("Parent(id=null, layer=0, name=null, parent=null)", method_result);
      
      Parent parent0 = new Parent();
      
      //Call method: toString
      String string0 = parent0.toString();
      
      //Test Result Assert
      assertEquals("Parent(id=null, layer=0, name=null, parent=null)", string0);
  }
}
