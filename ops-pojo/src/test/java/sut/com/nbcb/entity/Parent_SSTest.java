/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Parent;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Parent_SSTest extends Parent_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18, 22]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:8ac28003a98ffdce0148b34b57aa916b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: )
      //Assert: assertFalse(method_result);
      
      Parent parent0 = new Parent();
      
      //Call method: equals
      boolean boolean0 = parent0.equals(")");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:68a1c8c802f1681c5144b9ad4c2dc680
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: parent0
      //Assert: assertTrue(method_result);
      
      Parent parent0 = new Parent();
      
      //Call method: equals
      boolean boolean0 = parent0.equals(parent0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:eab785dc44edc6afe38b1cdcb5f08f2b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22]
      //Input_0_Object: parent0
      //Assert: assertTrue(method_result);
      
      Parent parent0 = new Parent();
      Parent parent1 = new Parent();
      
      //Call method: equals
      boolean boolean0 = parent1.equals(parent0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_3()  throws Throwable  {
      //caseID:aa73c7fcc68294cfcb04f98d549119a6
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22]
      
      Parent parent0 = new Parent();
      
      //Call method: hashCode
      parent0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setId_4()  throws Throwable  {
      //caseID:888a9d63d212cbf96ca92dfbb6aba1b2
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      Parent parent0 = new Parent();
      
      //Call method: setId
      parent0.setId("1.0");
      
      //Test Result Assert
      assertEquals(0L, parent0.getLayer());
  }

  @Test(timeout = 9000)
  public void test_setLayer_5()  throws Throwable  {
      //caseID:3eaf3f3934f6b26df56a7fa89a1020e3
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_long: -1
      
      Parent parent0 = new Parent();
      
      //Call method: setLayer
      parent0.setLayer((-1L));
      
      //Test Result Assert
      assertNull(parent0.getId());
  }

  @Test(timeout = 9000)
  public void test_setName_6()  throws Throwable  {
      //caseID:fad9abf3b8403522b5566bbcd65eac1e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      Parent parent0 = new Parent();
      
      //Call method: setName
      parent0.setName("");
      
      //Test Result Assert
      assertEquals(0L, parent0.getLayer());
  }

  @Test(timeout = 9000)
  public void test_setParent_7()  throws Throwable  {
      //caseID:674cf21f1d34f76b080c457c3e66a845
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: object0
      
      Parent parent0 = new Parent();
      Object object0 = new Object();
      
      //Call method: setParent
      parent0.setParent(object0);
      
      //Test Result Assert
      assertNull(parent0.getId());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:c64338f04200b9446a2c865c97a7453d
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22]
      //Assert: assertEquals("Parent(id=null, layer=0, name=null, parent=null)", method_result);
      
      Parent parent0 = new Parent();
      
      //Call method: toString
      String string0 = parent0.toString();
      
      //Test Result Assert
      assertEquals("Parent(id=null, layer=0, name=null, parent=null)", string0);
  }
}
