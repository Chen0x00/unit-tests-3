/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.PayResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class PayResult_SSTest extends PayResult_SSTest_scaffolding {
// allCoveredLines:[5, 7, 8, 9, 10]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:e4c9f9a3d23412e9d57f7c07642bf485
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: , status=
      //Assert: assertFalse(method_result);
      
      PayResult payResult0 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult0.equals(", status=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:558b534959cc9a9a2384206836bad88e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: payResult0
      //Assert: assertTrue(method_result);
      
      PayResult payResult0 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult0.equals(payResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:85f68f1308756988aeb12cd38a3cd7e6
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      //Input_0_Object: payResult0
      //Assert: assertTrue(method_result);
      
      PayResult payResult0 = new PayResult();
      PayResult payResult1 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult1.equals(payResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:c51446ef3a91783234e088ccc2b08532
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      //Input_0_Object: payResult1
      //Assert: assertTrue(method_result);
      
      PayResult payResult0 = new PayResult();
      PayResult payResult1 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult0.equals(payResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:c9cf86de876a37b6c9c86df604f98766
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      
      PayResult payResult0 = new PayResult();
      
      //Call method: hashCode
      payResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_5()  throws Throwable  {
      //caseID:a1f6a6b436e919ec1c72584c5e02fe2e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      PayResult payResult0 = new PayResult();
      
      //Call method: setMessage
      payResult0.setMessage("");
      
      //Test Result Assert
      assertNull(payResult0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_6()  throws Throwable  {
      //caseID:5a4359a10254f2be75ea3a44b41958c7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Long: 0L
      
      PayResult payResult0 = new PayResult();
      Long long0 = new Long(0L);
      
      //Call method: setOrderId
      payResult0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(payResult0.getPayId());
  }

  @Test(timeout = 9000)
  public void test_setPayId_7()  throws Throwable  {
      //caseID:bec84d952ae6eb7ea0445567799dee55
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Long: 0L
      
      PayResult payResult0 = new PayResult();
      Long long0 = new Long(0L);
      
      //Call method: setPayId
      payResult0.setPayId(long0);
      
      //Test Result Assert
      assertNull(payResult0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_setStatus_8()  throws Throwable  {
      //caseID:d8a1e0f6ef14e4fdf7b177081181a719
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Boolean: Boolean.TRUE
      
      PayResult payResult0 = new PayResult();
      Boolean boolean0 = Boolean.TRUE;
      
      //Call method: setStatus
      payResult0.setStatus(boolean0);
      
      //Test Result Assert
      assertTrue(payResult0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_toString_9()  throws Throwable  {
      //caseID:6c2eb5282490c40b9378b1c2196b1512
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      //Assert: assertEquals("PayResult(message=null, payId=null, status=null, orderId=null)", method_result);
      
      PayResult payResult0 = new PayResult();
      
      //Call method: toString
      String string0 = payResult0.toString();
      
      //Test Result Assert
      assertEquals("PayResult(message=null, payId=null, status=null, orderId=null)", string0);
  }
}
