/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.PayResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class PayResult_SSTest extends PayResult_SSTest_scaffolding {
// allCoveredLines:[5, 7, 8, 9, 10]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:f554855c4a2b4f24a717cfccdb882bef
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 0L
      //Assert: assertFalse(method_result);
      
      PayResult payResult0 = new PayResult();
      Long long0 = new Long(0L);
      
      //Call method: equals
      boolean boolean0 = payResult0.equals(long0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:80be16af1fe32824010565d8dd76e2a2
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: payResult0
      //Assert: assertTrue(method_result);
      
      PayResult payResult0 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult0.equals(payResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:678f0898f696aaa21be67737a78de646
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      //Input_0_Object: payResult0
      //Assert: assertTrue(method_result);
      
      PayResult payResult0 = new PayResult();
      PayResult payResult1 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult1.equals(payResult0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:39699f8aba2fcb995538e776f5936701
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      //Input_0_Object: payResult1
      //Assert: assertTrue(method_result);
      
      PayResult payResult0 = new PayResult();
      PayResult payResult1 = new PayResult();
      
      //Call method: equals
      boolean boolean0 = payResult0.equals(payResult1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:d074f8c837bc51588acaf1c043fffd81
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      
      PayResult payResult0 = new PayResult();
      
      //Call method: hashCode
      payResult0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setMessage_5()  throws Throwable  {
      //caseID:2d195985b4ccbf00129aea52e15694b4
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      PayResult payResult0 = new PayResult();
      
      //Call method: setMessage
      payResult0.setMessage("1.0");
      
      //Test Result Assert
      assertNull(payResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_6()  throws Throwable  {
      //caseID:d8177cd1a206b67b56065f4802dfcfe5
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Long: 0L
      
      PayResult payResult0 = new PayResult();
      Long long0 = new Long(0L);
      
      //Call method: setOrderId
      payResult0.setOrderId(long0);
      
      //Test Result Assert
      assertEquals(0L, (long)payResult0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_setPayId_7()  throws Throwable  {
      //caseID:b856eb3c84eed9cf5dd34533515868a7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Long: 1505L
      
      PayResult payResult0 = new PayResult();
      Long long0 = new Long(1505L);
      
      //Call method: setPayId
      payResult0.setPayId(long0);
      
      //Test Result Assert
      assertNull(payResult0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_setStatus_8()  throws Throwable  {
      //caseID:2a6329fe4f7b8cbd358832539b71f7e8
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Boolean: Boolean.TRUE
      
      PayResult payResult0 = new PayResult();
      Boolean boolean0 = Boolean.TRUE;
      
      //Call method: setStatus
      payResult0.setStatus(boolean0);
      
      //Test Result Assert
      assertTrue(payResult0.getStatus());
  }

  @Test(timeout = 9000)
  public void test_toString_9()  throws Throwable  {
      //caseID:e0a5f6064aae81062f538673631580a8
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 9, 10]
      //Assert: assertEquals("PayResult(message=null, payId=null, status=null, orderId=null)", method_result);
      
      PayResult payResult0 = new PayResult();
      
      //Call method: toString
      String string0 = payResult0.toString();
      
      //Test Result Assert
      assertEquals("PayResult(message=null, payId=null, status=null, orderId=null)", string0);
  }
}
