/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Property;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Property_SSTest extends Property_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:9b330c5355f9642cc0760c6706e7a7fc
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 1
      //Assert: assertFalse(method_result);
      
      Property property0 = new Property();
      
      //Call method: equals
      boolean boolean0 = property0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:67702e69aef3c0d8d67ee193d4260c43
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: property0
      //Assert: assertTrue(method_result);
      
      Property property0 = new Property();
      
      //Call method: equals
      boolean boolean0 = property0.equals(property0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:a4926e67455f6d5cd62f3abf1e74f86a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      //Input_0_Object: property0
      //Assert: assertTrue(method_result);
      
      Property property0 = new Property();
      Property property1 = new Property();
      
      //Call method: equals
      boolean boolean0 = property1.equals(property0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:793a452b0961568dd0d93367fd808d84
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      //Input_0_Object: property1
      //Assert: assertTrue(method_result);
      
      Property property0 = new Property();
      Property property1 = new Property();
      
      //Call method: equals
      boolean boolean0 = property0.equals(property1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:31291752f8b519ea690afcf42510aabd
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      
      Property property0 = new Property();
      
      //Call method: hashCode
      property0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setName_5()  throws Throwable  {
      //caseID:dee7ec67665710a97d892df4caae5860
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1
      
      Property property0 = new Property();
      
      //Call method: setName
      property0.setName("1");
      
      //Test Result Assert
      assertEquals("1", property0.getName());
  }

  @Test(timeout = 9000)
  public void test_setValue_6()  throws Throwable  {
      //caseID:c2fb276794e40a573e2d608fab05fb7f
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1
      
      Property property0 = new Property();
      
      //Call method: setValue
      property0.setValue("1");
      
      //Test Result Assert
      assertEquals("1", property0.getValue());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:6737aced20e2bf032fd7772ddae69a88
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      //Assert: assertEquals("Property(name=null, value=null)", method_result);
      
      Property property0 = new Property();
      
      //Call method: toString
      String string0 = property0.toString();
      
      //Test Result Assert
      assertEquals("Property(name=null, value=null)", string0);
  }
}
