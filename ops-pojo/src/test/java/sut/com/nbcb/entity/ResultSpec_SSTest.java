/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.ResultSpec;
import com.nbcb.entity.Value;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ResultSpec_SSTest extends ResultSpec_SSTest_scaffolding {
// allCoveredLines:[7, 12, 16, 20]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:a9f4775b9027920ad40af55f18a93584
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: resultSpec0
      //Assert: assertTrue(method_result);
      
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: equals
      boolean boolean0 = resultSpec0.equals(resultSpec0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:5e9fc69166f7874aef1cec7638abfd1d
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_Object: , values=
      //Assert: assertFalse(method_result);
      
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: equals
      boolean boolean0 = resultSpec0.equals(", values=");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:265090da3dfb038168b99ae791d8d244
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: resultSpec1
      //Assert: assertTrue(method_result);
      
      ResultSpec resultSpec0 = new ResultSpec();
      ResultSpec resultSpec1 = new ResultSpec();
      
      //Call method: equals
      boolean boolean0 = resultSpec0.equals(resultSpec1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:ecf80c33d1be8c154dd471371a8e9b12
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Input_0_Object: resultSpec0
      //Assert: assertTrue(method_result);
      
      ResultSpec resultSpec0 = new ResultSpec();
      ResultSpec resultSpec1 = new ResultSpec();
      
      //Call method: equals
      boolean boolean0 = resultSpec1.equals(resultSpec0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:6f37315e408b970e706824c25128543c
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: hashCode
      resultSpec0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setId_5()  throws Throwable  {
      //caseID:7d8bde8ba4a8a2cfb6be3b905f560688
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: z'%]%3l/MNP>=;Ic
      
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: setId
      resultSpec0.setId("z'%]%3l/MNP>=;Ic");
      
      //Test Result Assert
      assertNull(resultSpec0.getName());
  }

  @Test(timeout = 9000)
  public void test_setName_6()  throws Throwable  {
      //caseID:e8726a1f3ac7cc8a374980d31a80caa2
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_String: 
      
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: setName
      resultSpec0.setName("");
      
      //Test Result Assert
      assertEquals("", resultSpec0.getName());
  }

  @Test(timeout = 9000)
  public void test_setValues_7()  throws Throwable  {
      //caseID:f238bd79c0afa8e85bf3bdf824e74a90
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7]
      //Input_0_List<Value>: linkedList0
      
      ResultSpec resultSpec0 = new ResultSpec();
      LinkedList<Value> linkedList0 = new LinkedList<Value>();
      
      //Call method: setValues
      resultSpec0.setValues(linkedList0);
      
      //Test Result Assert
      assertNull(resultSpec0.getName());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:de971a09e08bc4fa01efa4da9ef0baeb
      //CoveredLines: [7, 7, 7, 7, 7, 7, 7, 7, 12, 16, 20]
      //Assert: assertEquals("ResultSpec(id=null, name=null, values=null)", method_result);
      
      ResultSpec resultSpec0 = new ResultSpec();
      
      //Call method: toString
      String string0 = resultSpec0.toString();
      
      //Test Result Assert
      assertEquals("ResultSpec(id=null, name=null, values=null)", string0);
  }
}
