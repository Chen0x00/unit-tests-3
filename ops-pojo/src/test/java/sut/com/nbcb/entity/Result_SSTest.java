/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Result;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Result_SSTest extends Result_SSTest_scaffolding {
// allCoveredLines:[10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 50]

  @Test(timeout = 9000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:5aeb7047cc2a3b8d3e7b19665034716c
      //CoveredLines: [13, 14, 15, 16, 37]
      //Assert: assertNull(method_result);
      
      Boolean boolean0 = Boolean.TRUE;
      Result result0 = new Result(boolean0, "com.nbcb.entity.Result");
      
      //Call method: getCode
      Integer integer0 = result0.getCode();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 9000)
  public void test_getMessage_1()  throws Throwable  {
      //caseID:fd5c65b899588e911dcead913d563ca6
      //CoveredLines: [18, 19, 20, 21, 22, 33]
      //Assert: assertEquals(", message='", method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(531);
      Result result0 = new Result(boolean0, integer0, ", message='");
      
      //Call method: getMessage
      String string0 = result0.getMessage();
      
      //Test Result Assert
      assertEquals(", message='", string0);
  }

  @Test(timeout = 9000)
  public void test_getSuccess_2()  throws Throwable  {
      //caseID:af5271c582c1b80627d70a5173723c58
      //CoveredLines: [13, 14, 15, 16, 25]
      //Assert: assertFalse(method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, "kGHV-/9;.UjL[>");
      
      //Call method: getSuccess
      Boolean boolean1 = result0.getSuccess();
      
      //Test Result Assert
      assertFalse(boolean1);
  }

  @Test(timeout = 9000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:3ca84790f2f865db1a17fda6637ccf8c
      //CoveredLines: [10, 11, 41, 42]
      //Input_0_Integer: 375
      
      Result result0 = new Result();
      Integer integer0 = new Integer(375);
      
      //Call method: setCode
      result0.setCode(integer0);
      
      //Test Result Assert
      assertNull(result0.getSuccess());
  }

  @Test(timeout = 9000)
  public void test_setMessage_4()  throws Throwable  {
      //caseID:5681828a670529482c5ddb6f2bc53347
      //CoveredLines: [13, 14, 15, 16, 45, 46]
      //Input_0_String: 1.0
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, (String) null);
      
      //Call method: setMessage
      result0.setMessage("1.0");
      
      //Test Result Assert
      assertNull(result0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setMessage_5()  throws Throwable  {
      //caseID:a295b6208b75ed4e30b2628d9ad1f988
      //CoveredLines: [18, 19, 20, 21, 22, 45, 46]
      //Input_0_String: 
      
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(1);
      Result result0 = new Result(boolean0, integer0, "39");
      
      //Call method: setMessage
      result0.setMessage("");
      
      //Test Result Assert
      assertEquals("", result0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_setSuccess_6()  throws Throwable  {
      //caseID:b04c48b4ce8efc484c72804cfb06b9d2
      //CoveredLines: [10, 11, 29, 30]
      //Input_0_Boolean: Boolean.FALSE
      
      Result result0 = new Result();
      Boolean boolean0 = Boolean.FALSE;
      
      //Call method: setSuccess
      result0.setSuccess(boolean0);
      
      //Test Result Assert
      assertFalse(result0.getSuccess());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:030387a7aa28f61ff3ecbd0592c541a0
      //CoveredLines: [13, 14, 15, 16, 50]
      //Assert: assertEquals("Result{success=false, code=null, message=''}", method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, "");
      
      //Call method: toString
      String string0 = result0.toString();
      
      //Test Result Assert
      assertEquals("Result{success=false, code=null, message=''}", string0);
  }
}
