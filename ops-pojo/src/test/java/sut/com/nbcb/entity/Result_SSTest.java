/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Result;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Result_SSTest extends Result_SSTest_scaffolding {
// allCoveredLines:[10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 50]

  @Test(timeout = 9000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:90841f37512771b75edc76b3316c8179
      //CoveredLines: [18, 19, 20, 21, 22, 37]
      //Assert: assertEquals(0, (int)method_result);
      
      Boolean boolean0 = Boolean.TRUE;
      Integer integer0 = new Integer(0);
      Result result0 = new Result(boolean0, integer0, "1.0");
      
      //Call method: getCode
      Integer integer1 = result0.getCode();
      
      //Test Result Assert
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 9000)
  public void test_getMessage_1()  throws Throwable  {
      //caseID:53877a4ff5a8b9e94d4de68da76343ed
      //CoveredLines: [18, 19, 20, 21, 22, 33]
      //Assert: assertEquals("", method_result);
      
      Boolean boolean0 = Boolean.TRUE;
      Integer integer0 = new Integer(0);
      Result result0 = new Result(boolean0, integer0, "");
      
      //Call method: getMessage
      String string0 = result0.getMessage();
      
      //Test Result Assert
      assertEquals("", string0);
  }

  @Test(timeout = 9000)
  public void test_getSuccess_2()  throws Throwable  {
      //caseID:d3e56a7a241d1c6ab56875bf50fec993
      //CoveredLines: [10, 11, 25]
      //Assert: assertNull(method_result);
      
      Result result0 = new Result();
      
      //Call method: getSuccess
      Boolean boolean0 = result0.getSuccess();
      
      //Test Result Assert
      assertNull(boolean0);
  }

  @Test(timeout = 9000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:81f104231aea1adfe4b18bebf0d81d2c
      //CoveredLines: [13, 14, 15, 16, 41, 42]
      //Input_0_Integer: 1
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, ", code=");
      Integer integer0 = new Integer(1);
      
      //Call method: setCode
      result0.setCode(integer0);
      
      //Test Result Assert
      assertEquals(", code=", result0.getMessage());
  }

  @Test(timeout = 9000)
  public void test_setMessage_4()  throws Throwable  {
      //caseID:8988d5f38e80cfd6607ad9880ba30935
      //CoveredLines: [10, 11, 45, 46]
      //Input_0_String: 
      
      Result result0 = new Result();
      
      //Call method: setMessage
      result0.setMessage("");
      
      //Test Result Assert
      assertNull(result0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setSuccess_5()  throws Throwable  {
      //caseID:7c6077cfeb993b0ee828cffe68f03566
      //CoveredLines: [18, 19, 20, 21, 22, 29, 30]
      //Input_0_Boolean: Boolean.FALSE
      
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(0);
      Result result0 = new Result(boolean0, integer0, ", message='");
      
      //Call method: setSuccess
      result0.setSuccess(boolean0);
      
      //Test Result Assert
      assertFalse(result0.getSuccess());
  }

  @Test(timeout = 9000)
  public void test_toString_6()  throws Throwable  {
      //caseID:6616b2d64c8ad3c598da069a340879b6
      //CoveredLines: [13, 14, 15, 16, 50]
      //Assert: assertEquals("Result{success=true, code=null, message='1'}", method_result);
      
      Boolean boolean0 = Boolean.TRUE;
      Result result0 = new Result(boolean0, "1");
      
      //Call method: toString
      String string0 = result0.toString();
      
      //Test Result Assert
      assertEquals("Result{success=true, code=null, message='1'}", string0);
  }
}
