/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Result;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Result_SSTest extends Result_SSTest_scaffolding {
// allCoveredLines:[10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 50]

  @Test(timeout = 9000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:f5d69e158f63a5c036b882f54db32b5d
      //CoveredLines: [18, 19, 20, 21, 22, 37]
      //Assert: assertEquals(620, (int)method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(620);
      Result result0 = new Result(boolean0, integer0, ", message='");
      
      //Call method: getCode
      Integer integer1 = result0.getCode();
      
      //Test Result Assert
      assertEquals(620, (int)integer1);
  }

  @Test(timeout = 9000)
  public void test_getMessage_1()  throws Throwable  {
      //caseID:d65b05e27641ee4337c34f0a3a7facd7
      //CoveredLines: [13, 14, 15, 16, 33]
      //Assert: assertEquals("", method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, "");
      
      //Call method: getMessage
      String string0 = result0.getMessage();
      
      //Test Result Assert
      assertEquals("", string0);
  }

  @Test(timeout = 9000)
  public void test_getSuccess_2()  throws Throwable  {
      //caseID:d59f494ea11b92d0e37e8040afcaecef
      //CoveredLines: [18, 19, 20, 21, 22, 25]
      //Assert: assertFalse(method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(0);
      Result result0 = new Result(boolean0, integer0, "1");
      
      //Call method: getSuccess
      Boolean boolean1 = result0.getSuccess();
      
      //Test Result Assert
      assertFalse(boolean1);
  }

  @Test(timeout = 9000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:aab0c19edac069723ce6f5569246dffb
      //CoveredLines: [10, 11, 41, 42]
      //Input_0_Integer: 0
      
      Result result0 = new Result();
      Integer integer0 = new Integer(0);
      
      //Call method: setCode
      result0.setCode(integer0);
      
      //Test Result Assert
      assertNull(result0.getSuccess());
  }

  @Test(timeout = 9000)
  public void test_setMessage_4()  throws Throwable  {
      //caseID:4aca4686b3c3314d29ab206ae75d6bbc
      //CoveredLines: [13, 14, 15, 16, 45, 46]
      //Input_0_String: , message='
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, "");
      
      //Call method: setMessage
      result0.setMessage(", message='");
      
      //Test Result Assert
      assertNull(result0.getCode());
  }

  @Test(timeout = 9000)
  public void test_setSuccess_5()  throws Throwable  {
      //caseID:24fe4c705a0f7adc16327f8892350afc
      //CoveredLines: [10, 11, 29, 30]
      //Input_0_Boolean: Boolean.FALSE
      
      Result result0 = new Result();
      Boolean boolean0 = Boolean.FALSE;
      
      //Call method: setSuccess
      result0.setSuccess(boolean0);
      
      //Test Result Assert
      assertFalse(result0.getSuccess());
  }

  @Test(timeout = 9000)
  public void test_toString_6()  throws Throwable  {
      //caseID:da7cbfc54b495ecb1eed6c016f25d10f
      //CoveredLines: [13, 14, 15, 16, 50]
      //Assert: assertEquals("Result{success=false, code=null, message='NOu'}", method_result);
      
      Boolean boolean0 = Boolean.FALSE;
      Result result0 = new Result(boolean0, "NOu");
      
      //Call method: toString
      String string0 = result0.toString();
      
      //Test Result Assert
      assertEquals("Result{success=false, code=null, message='NOu'}", string0);
  }
}
