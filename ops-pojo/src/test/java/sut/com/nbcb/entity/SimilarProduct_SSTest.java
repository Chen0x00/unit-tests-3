/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.SimilarProduct;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class SimilarProduct_SSTest extends SimilarProduct_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18, 22, 26, 30, 34]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:c52e0b1cd5490a302b07b493612b1d20
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: similarProduct0
      //Assert: assertTrue(method_result);
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: equals
      boolean boolean0 = similarProduct0.equals(similarProduct0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:d4bc8a7e9c5f9a4c8cc1c46428812658
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: com.nbcb.entity.SimilarProduct
      //Assert: assertFalse(method_result);
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: equals
      boolean boolean0 = similarProduct0.equals("com.nbcb.entity.SimilarProduct");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:694ababe26e56475f57512188929db50
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      //Input_0_Object: similarProduct1
      //Assert: assertTrue(method_result);
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      SimilarProduct similarProduct1 = new SimilarProduct();
      
      //Call method: equals
      boolean boolean0 = similarProduct0.equals(similarProduct1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:00b144b8340fa0cc5a30b221bdd07f21
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      //Input_0_Object: similarProduct0
      //Assert: assertTrue(method_result);
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      SimilarProduct similarProduct1 = new SimilarProduct();
      
      //Call method: equals
      boolean boolean0 = similarProduct1.equals(similarProduct0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:a950fd1a8ae61bac503daf0789eaf207
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: hashCode
      similarProduct0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDesc_05()  throws Throwable  {
      //caseID:23fdcb8aa07d2dae2e537da224b9ddcd
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setDesc
      similarProduct0.setDesc("1.0");
      
      //Test Result Assert
      assertEquals(0L, similarProduct0.getOrderNum());
  }

  @Test(timeout = 9000)
  public void test_setDiscount_06()  throws Throwable  {
      //caseID:7eb9ae863c04cd7a1a74b6de48e81b9a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setDiscount
      similarProduct0.setDiscount("");
      
      //Test Result Assert
      assertNull(similarProduct0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setId_07()  throws Throwable  {
      //caseID:9c78df6808182aa2b6b56c789a9efd8b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 59
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setId
      similarProduct0.setId("59");
      
      //Test Result Assert
      assertEquals(0L, similarProduct0.getOrderNum());
  }

  @Test(timeout = 9000)
  public void test_setName_08()  throws Throwable  {
      //caseID:8b15371d1b55c6f294bd13b18cdc0b3a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setName
      similarProduct0.setName("1.0");
      
      //Test Result Assert
      assertNull(similarProduct0.getId());
  }

  @Test(timeout = 9000)
  public void test_setOrderNum_09()  throws Throwable  {
      //caseID:0cb537c885f7ac20b6d4a73d193603f7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_long: 862
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setOrderNum
      similarProduct0.setOrderNum(862L);
      
      //Test Result Assert
      assertNull(similarProduct0.getId());
  }

  @Test(timeout = 9000)
  public void test_setPicture_10()  throws Throwable  {
      //caseID:9761b61c59ff9df03d27844cb244eb0c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: , discount=
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setPicture
      similarProduct0.setPicture(", discount=");
      
      //Test Result Assert
      assertEquals(", discount=", similarProduct0.getPicture());
  }

  @Test(timeout = 9000)
  public void test_setPrice_11()  throws Throwable  {
      //caseID:05257e4f301e2eeb615cee88ba1cb8eb
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: setPrice
      similarProduct0.setPrice("");
      
      //Test Result Assert
      assertEquals("", similarProduct0.getPrice());
  }

  @Test(timeout = 9000)
  public void test_toString_12()  throws Throwable  {
      //caseID:7d52126d3eee14ec7d80705cb5d1ca16
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34]
      //Assert: assertEquals("SimilarProduct(desc=null, discount=null, id=null, name=null, orderNum=0, picture=null, price=null)", method_result);
      
      SimilarProduct similarProduct0 = new SimilarProduct();
      
      //Call method: toString
      String string0 = similarProduct0.toString();
      
      //Test Result Assert
      assertEquals("SimilarProduct(desc=null, discount=null, id=null, name=null, orderNum=0, picture=null, price=null)", string0);
  }
}
