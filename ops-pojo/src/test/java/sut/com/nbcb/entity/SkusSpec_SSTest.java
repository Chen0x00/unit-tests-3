/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.SkusSpec;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class SkusSpec_SSTest extends SkusSpec_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:6f3e48da0a633541635ccd7d3d46cd14
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: skusSpec0
      //Assert: assertTrue(method_result);
      
      SkusSpec skusSpec0 = new SkusSpec();
      
      //Call method: equals
      boolean boolean0 = skusSpec0.equals(skusSpec0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:99070f50bddd84f2dacbb8b457640682
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: com.nbcb.entity.SkusSpec
      //Assert: assertFalse(method_result);
      
      SkusSpec skusSpec0 = new SkusSpec();
      
      //Call method: equals
      boolean boolean0 = skusSpec0.equals("com.nbcb.entity.SkusSpec");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:f7843afa2fbf04b174a06d5e9d19cd7e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      //Input_0_Object: skusSpec0
      //Assert: assertTrue(method_result);
      
      SkusSpec skusSpec0 = new SkusSpec();
      SkusSpec skusSpec1 = new SkusSpec();
      
      //Call method: equals
      boolean boolean0 = skusSpec1.equals(skusSpec0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:b58b509b46029fc642117e4db7e17e5c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      //Input_0_Object: skusSpec1
      //Assert: assertTrue(method_result);
      
      SkusSpec skusSpec0 = new SkusSpec();
      SkusSpec skusSpec1 = new SkusSpec();
      
      //Call method: equals
      boolean boolean0 = skusSpec0.equals(skusSpec1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:088ed6c63efb03ee325d3230e4af8d2c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      
      SkusSpec skusSpec0 = new SkusSpec();
      
      //Call method: hashCode
      skusSpec0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setName_5()  throws Throwable  {
      //caseID:af16dda73f746b5746486a8ce7f45f0c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1
      
      SkusSpec skusSpec0 = new SkusSpec();
      
      //Call method: setName
      skusSpec0.setName("1");
      
      //Test Result Assert
      assertEquals("1", skusSpec0.getName());
  }

  @Test(timeout = 9000)
  public void test_setValueName_6()  throws Throwable  {
      //caseID:58769b62b267878c81d1272a9636b148
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      SkusSpec skusSpec0 = new SkusSpec();
      
      //Call method: setValueName
      skusSpec0.setValueName("");
      
      //Test Result Assert
      assertEquals("", skusSpec0.getValueName());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:cb4791b4ca5543ce96ed4ad215a40879
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 10, 14]
      //Assert: assertEquals("SkusSpec(name=null, valueName=null)", method_result);
      
      SkusSpec skusSpec0 = new SkusSpec();
      
      //Call method: toString
      String string0 = skusSpec0.toString();
      
      //Test Result Assert
      assertEquals("SkusSpec(name=null, valueName=null)", string0);
  }
}
