/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Summary;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Summary_SSTest extends Summary_SSTest_scaffolding {
// allCoveredLines:[6, 11, 15, 19, 23, 27]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:aa2194c1fcffdd3efd3b9f5ea78d53aa
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_Object: object0
      //Assert: assertFalse(method_result);
      
      Summary summary0 = new Summary();
      Object object0 = new Object();
      
      //Call method: equals
      boolean boolean0 = summary0.equals(object0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:236e49c2fdbd28d292f99ad3ddc6fd22
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_Object: summary0
      //Assert: assertTrue(method_result);
      
      Summary summary0 = new Summary();
      
      //Call method: equals
      boolean boolean0 = summary0.equals(summary0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:3e75b4a31dff22b359fc96254f8434e5
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 11, 15, 19, 23, 27]
      //Input_0_Object: summary1
      //Assert: assertTrue(method_result);
      
      Summary summary0 = new Summary();
      Summary summary1 = new Summary();
      
      //Call method: equals
      boolean boolean0 = summary0.equals(summary1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_3()  throws Throwable  {
      //caseID:571191fdb7c4f206314e6fe38bdba5eb
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 11, 15, 19, 23, 27]
      
      Summary summary0 = new Summary();
      
      //Call method: hashCode
      summary0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDiscountPrice_4()  throws Throwable  {
      //caseID:b7eacca20d9bf17e90aaf3c02c32a3af
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_long: 0
      
      Summary summary0 = new Summary();
      
      //Call method: setDiscountPrice
      summary0.setDiscountPrice(0L);
      
      //Test Result Assert
      assertEquals(0L, summary0.getTotalPrice());
  }

  @Test(timeout = 9000)
  public void test_setGoodsCount_5()  throws Throwable  {
      //caseID:4664311f31c82c94ca7b41b27380da7f
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_long: 1027
      
      Summary summary0 = new Summary();
      
      //Call method: setGoodsCount
      summary0.setGoodsCount(1027L);
      
      //Test Result Assert
      assertEquals(1027L, summary0.getGoodsCount());
  }

  @Test(timeout = 9000)
  public void test_setPostFee_6()  throws Throwable  {
      //caseID:f2baf645ea6321aff7962e01616d3fe3
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_long: 4627
      
      Summary summary0 = new Summary();
      
      //Call method: setPostFee
      summary0.setPostFee(4627L);
      
      //Test Result Assert
      assertEquals(0L, summary0.getTotalPrice());
  }

  @Test(timeout = 9000)
  public void test_setTotalPayPrice_7()  throws Throwable  {
      //caseID:d546ace7d6a735e25b32c8293e94ede6
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_long: 0
      
      Summary summary0 = new Summary();
      
      //Call method: setTotalPayPrice
      summary0.setTotalPayPrice(0L);
      
      //Test Result Assert
      assertEquals(0L, summary0.getTotalPayPrice());
  }

  @Test(timeout = 9000)
  public void test_setTotalPrice_8()  throws Throwable  {
      //caseID:b60ad87ac5bc04fd05d752a4dfc588a6
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
      //Input_0_long: 0
      
      Summary summary0 = new Summary();
      
      //Call method: setTotalPrice
      summary0.setTotalPrice(0L);
      
      //Test Result Assert
      assertEquals(0L, summary0.getTotalPayPrice());
  }

  @Test(timeout = 9000)
  public void test_toString_9()  throws Throwable  {
      //caseID:c405d0da9e533182ff12b646a5b6daa1
      //CoveredLines: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 11, 15, 19, 23, 27]
      //Assert: assertEquals("Summary(discountPrice=0, goodsCount=0, postFee=0, totalPayPrice=0, totalPrice=0)", method_result);
      
      Summary summary0 = new Summary();
      
      //Call method: toString
      String string0 = summary0.toString();
      
      //Test Result Assert
      assertEquals("Summary(discountPrice=0, goodsCount=0, postFee=0, totalPayPrice=0, totalPrice=0)", string0);
  }
}
