/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Value;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Value_SSTest extends Value_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:0809dffce429cf83dbf72b4ade3399f8
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: RVyxy9
      //Assert: assertFalse(method_result);
      
      Value value0 = new Value();
      
      //Call method: equals
      boolean boolean0 = value0.equals("RVyxy9");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:e74ca1e884cb4ea4a9812d6e9d0003dd
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: value0
      //Assert: assertTrue(method_result);
      
      Value value0 = new Value();
      
      //Call method: equals
      boolean boolean0 = value0.equals(value0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:5d62103595dc4983ba313d2be6675fc8
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Input_0_Object: value0
      //Assert: assertTrue(method_result);
      
      Value value0 = new Value();
      Value value1 = new Value();
      
      //Call method: equals
      boolean boolean0 = value1.equals(value0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:09dc688e2e16814538115b5bdc6d1106
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Input_0_Object: value1
      //Assert: assertTrue(method_result);
      
      Value value0 = new Value();
      Value value1 = new Value();
      
      //Call method: equals
      boolean boolean0 = value0.equals(value1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:85bccdc27d464b87ee9bf0e38099d9c4
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      
      Value value0 = new Value();
      
      //Call method: hashCode
      value0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDesc_5()  throws Throwable  {
      //caseID:0c16cb0f437c761a31657baa528cf4fd
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: ;
      
      Value value0 = new Value();
      
      //Call method: setDesc
      value0.setDesc(";");
      
      //Test Result Assert
      assertNull(value0.getPicture());
  }

  @Test(timeout = 9000)
  public void test_setName_6()  throws Throwable  {
      //caseID:7248545b8d0521d7d47bed5d16ff6740
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      Value value0 = new Value();
      
      //Call method: setName
      value0.setName("1.0");
      
      //Test Result Assert
      assertEquals("1.0", value0.getName());
  }

  @Test(timeout = 9000)
  public void test_setPicture_7()  throws Throwable  {
      //caseID:dd59452dc382fbc2425ebce79ec69233
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      Value value0 = new Value();
      
      //Call method: setPicture
      value0.setPicture("");
      
      //Test Result Assert
      assertEquals("", value0.getPicture());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:e0415bd2964d2f937b3decfc026eb760
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Assert: assertEquals("Value(desc=null, name=null, picture=null)", method_result);
      
      Value value0 = new Value();
      
      //Call method: toString
      String string0 = value0.toString();
      
      //Test Result Assert
      assertEquals("Value(desc=null, name=null, picture=null)", string0);
  }
}
