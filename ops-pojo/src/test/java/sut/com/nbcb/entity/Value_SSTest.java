/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.entity.Value;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class Value_SSTest extends Value_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:3f9a8954542e7a2b59d3819a5aef45be
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: com.nbcb.entity.Value
      //Assert: assertFalse(method_result);
      
      Value value0 = new Value();
      
      //Call method: equals
      boolean boolean0 = value0.equals("com.nbcb.entity.Value");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:785f2f22d16244fb79234fcf99e5a477
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: value0
      //Assert: assertTrue(method_result);
      
      Value value0 = new Value();
      
      //Call method: equals
      boolean boolean0 = value0.equals(value0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:d3a5382c0572fb931629c2b05fb58c1e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Input_0_Object: value0
      //Assert: assertTrue(method_result);
      
      Value value0 = new Value();
      Value value1 = new Value();
      
      //Call method: equals
      boolean boolean0 = value1.equals(value0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:993b5e985f94994b8e45bf31e3c8450c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Input_0_Object: value1
      //Assert: assertTrue(method_result);
      
      Value value0 = new Value();
      Value value1 = new Value();
      
      //Call method: equals
      boolean boolean0 = value0.equals(value1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:c176af0e2329efa4cec0030443dab501
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      
      Value value0 = new Value();
      
      //Call method: hashCode
      value0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setDesc_5()  throws Throwable  {
      //caseID:660e2e8d70f43289d38840f8bb4eeab1
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      Value value0 = new Value();
      
      //Call method: setDesc
      value0.setDesc("1.0");
      
      //Test Result Assert
      assertEquals("1.0", value0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setName_6()  throws Throwable  {
      //caseID:d986316acecc2537eb2877713e620d87
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 43
      
      Value value0 = new Value();
      
      //Call method: setName
      value0.setName("43");
      
      //Test Result Assert
      assertNull(value0.getDesc());
  }

  @Test(timeout = 9000)
  public void test_setPicture_7()  throws Throwable  {
      //caseID:25611d6e07e261ee6632e1de086780dc
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      Value value0 = new Value();
      
      //Call method: setPicture
      value0.setPicture("1.0");
      
      //Test Result Assert
      assertEquals("1.0", value0.getPicture());
  }

  @Test(timeout = 9000)
  public void test_toString_8()  throws Throwable  {
      //caseID:84135eead503de2c934f66824b674164
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18]
      //Assert: assertEquals("Value(desc=null, name=null, picture=null)", method_result);
      
      Value value0 = new Value();
      
      //Call method: toString
      String string0 = value0.toString();
      
      //Test Result Assert
      assertEquals("Value(desc=null, name=null, picture=null)", string0);
  }
}
