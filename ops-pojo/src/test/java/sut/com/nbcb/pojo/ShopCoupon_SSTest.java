/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopCoupon;
import java.math.BigDecimal;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopCoupon_SSTest extends ShopCoupon_SSTest_scaffolding {
// allCoveredLines:[9, 11, 13, 15, 17, 19, 21]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:b171c0c5ce89161126ff78529bb86e48
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Object: 305
      //Assert: assertFalse(method_result);
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      Long long0 = new Long(305);
      
      //Call method: equals
      boolean boolean0 = shopCoupon0.equals(long0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:669fbf74e29d6030d358aed63971edaf
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Object: shopCoupon0
      //Assert: assertTrue(method_result);
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      
      //Call method: equals
      boolean boolean0 = shopCoupon0.equals(shopCoupon0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:b1d0da494b0aecad15a1a1dbda4c3dca
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 11, 13, 15, 17, 19, 21]
      //Input_0_Object: shopCoupon1
      //Assert: assertTrue(method_result);
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      ShopCoupon shopCoupon1 = new ShopCoupon();
      
      //Call method: equals
      boolean boolean0 = shopCoupon0.equals(shopCoupon1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:5fa3fb028de7f1235db87622b1e45324
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 11, 13, 15, 17, 19, 21]
      //Input_0_Object: shopCoupon0
      //Assert: assertTrue(method_result);
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      ShopCoupon shopCoupon1 = new ShopCoupon();
      
      //Call method: equals
      boolean boolean0 = shopCoupon1.equals(shopCoupon0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:452173efd1decd9465f40a5aa19fd7b5
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 11, 13, 15, 17, 19, 21]
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      
      //Call method: hashCode
      shopCoupon0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCouponId_05()  throws Throwable  {
      //caseID:9dd3af8ff43b37a989be2e5a7ba2e54f
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Long: 0L
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      Long long0 = new Long(0L);
      
      //Call method: setCouponId
      shopCoupon0.setCouponId(long0);
      
      //Test Result Assert
      assertEquals(0L, (long)shopCoupon0.getCouponId());
  }

  @Test(timeout = 9000)
  public void test_setCouponPrice_06()  throws Throwable  {
      //caseID:dd997ac397fdc93b3526e093989c3f46
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setCouponPrice
      shopCoupon0.setCouponPrice(bigDecimal0);
      
      //Test Result Assert
      assertNull(shopCoupon0.getIsUsed());
  }

  @Test(timeout = 9000)
  public void test_setIsUsed_07()  throws Throwable  {
      //caseID:19a04f1c2cd9a72fbadbc4abf9715baa
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Integer: 0
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      Integer integer0 = new Integer(0);
      
      //Call method: setIsUsed
      shopCoupon0.setIsUsed(integer0);
      
      //Test Result Assert
      assertNull(shopCoupon0.getCouponId());
  }

  @Test(timeout = 9000)
  public void test_setOrderId_08()  throws Throwable  {
      //caseID:c14f6a623ff2f9414bb1621d908426ba
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Long: 0L
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      Long long0 = new Long(0L);
      
      //Call method: setOrderId
      shopCoupon0.setOrderId(long0);
      
      //Test Result Assert
      assertNull(shopCoupon0.getCouponId());
  }

  @Test(timeout = 9000)
  public void test_setUsedTime_09()  throws Throwable  {
      //caseID:649d44aa3c2d7a08258ed62912e411ab
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Date: {}
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setUsedTime
      shopCoupon0.setUsedTime(date0);
      
      //Test Result Assert
      assertNull(shopCoupon0.getIsUsed());
  }

  @Test(timeout = 9000)
  public void test_setUserId_10()  throws Throwable  {
      //caseID:c8d9e8ec16b7e3c542315fe8056373c6
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
      //Input_0_Long: 0L
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      Long long0 = new Long(0L);
      
      //Call method: setUserId
      shopCoupon0.setUserId(long0);
      
      //Test Result Assert
      assertNull(shopCoupon0.getOrderId());
  }

  @Test(timeout = 9000)
  public void test_toString_11()  throws Throwable  {
      //caseID:06f05845882a0e809a5f7e3efd83b43e
      //CoveredLines: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 11, 13, 15, 17, 19, 21]
      //Assert: assertEquals("ShopCoupon(couponId=null, couponPrice=null, userId=null, orderId=null, isUsed=null, usedTime=null)", method_result);
      
      ShopCoupon shopCoupon0 = new ShopCoupon();
      
      //Call method: toString
      String string0 = shopCoupon0.toString();
      
      //Test Result Assert
      assertEquals("ShopCoupon(couponId=null, couponPrice=null, userId=null, orderId=null, isUsed=null, usedTime=null)", string0);
  }
}
