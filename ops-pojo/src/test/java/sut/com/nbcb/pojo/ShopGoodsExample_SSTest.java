/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopGoodsExample;
import java.util.ArrayList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopGoodsExample_SSTest extends ShopGoodsExample_SSTest_scaffolding {
// allCoveredLines:[18, 19, 20, 23, 24, 27, 31, 32, 35, 39, 43, 44, 47, 48, 49, 53, 54, 55, 57, 61, 62, 66, 67, 68, 69, 75, 76, 77, 496, 497]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:f0405543f8902d7ea8f70bfd95c9c858
      //CoveredLines: [18, 19, 20, 66, 67, 68, 69]
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: clear
      shopGoodsExample0.clear();
      
      //Test Result Assert
      assertFalse(shopGoodsExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:70f9b1c16f0ee6896aa435a0c217ee79
      //CoveredLines: [18, 19, 20, 53, 54, 57, 61, 62, 75, 76, 77, 496, 497]
      //Assert: assertFalse(method_result.equals((Object)shopGoodsExample_Criteria0));
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      ArrayList<ShopGoodsExample.Criteria> arrayList0 = new ArrayList<ShopGoodsExample.Criteria>();
      //mock shopGoodsExample_Criteria0
      ShopGoodsExample.Criteria shopGoodsExample_Criteria0 = mock(ShopGoodsExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      arrayList0.add(shopGoodsExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopGoodsExample.class, shopGoodsExample0, "oredCriteria", (Object) arrayList0);
      
      //Call method: createCriteria
      ShopGoodsExample.Criteria shopGoodsExample_Criteria1 = shopGoodsExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopGoodsExample_Criteria1.equals((Object)shopGoodsExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:5e283251efc58bd170506249a786d239
      //CoveredLines: [18, 19, 20, 53, 54, 55, 57, 61, 62, 75, 76, 77, 496, 497]
      //Assert: assertNotNull(method_result);
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: createCriteria
      ShopGoodsExample.Criteria shopGoodsExample_Criteria0 = shopGoodsExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopGoodsExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:d7e02f57bd5bb49de9ea7e807a706bee
      //CoveredLines: [18, 19, 20, 27]
      //Assert: assertNull(method_result);
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: getOrderByClause
      String string0 = shopGoodsExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:4c33cfa72e7a332cde871aec1265c4d8
      //CoveredLines: [18, 19, 20, 39]
      //Assert: assertEquals(0, method_result.size());
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: getOredCriteria
      List<ShopGoodsExample.Criteria> list0 = shopGoodsExample0.getOredCriteria();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:9c5051aa7058d9567d0c9d0f8afd55da
      //CoveredLines: [18, 19, 20, 35]
      //Assert: assertFalse(method_result);
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopGoodsExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:7255ce912ace8b9ab70062d7109d9cba
      //CoveredLines: [18, 19, 20, 43, 44]
      //Input_0_ShopGoodsExample.Criteria: {}
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      //mock shopGoodsExample_Criteria0
      ShopGoodsExample.Criteria shopGoodsExample_Criteria0 = mock(ShopGoodsExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopGoodsExample0.or(shopGoodsExample_Criteria0);
      
      //Test Result Assert
      assertNull(shopGoodsExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:95a5f8427705bb9bf5efeaff0894d328
      //CoveredLines: [18, 19, 20, 47, 48, 49, 61, 62, 75, 76, 77, 496, 497]
      //Assert: assertNotNull(method_result);
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: or
      ShopGoodsExample.Criteria shopGoodsExample_Criteria0 = shopGoodsExample0.or();
      
      //Test Result Assert
      assertNotNull(shopGoodsExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:3bc4061e972585b7c38a73a1880392ba
      //CoveredLines: [18, 19, 20, 31, 32]
      //Input_0_boolean: true
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: setDistinct
      shopGoodsExample0.setDistinct(true);
      
      //Test Result Assert
      assertNull(shopGoodsExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:23fa41ae5f12cff45cef74e0f4ff1cd7
      //CoveredLines: [18, 19, 20, 23, 24]
      //Input_0_String: {} request: {}
      
      ShopGoodsExample shopGoodsExample0 = new ShopGoodsExample();
      
      //Call method: setOrderByClause
      shopGoodsExample0.setOrderByClause("{} request: {}");
      
      //Test Result Assert
      assertEquals("{} request: {}", shopGoodsExample0.getOrderByClause());
  }
}
