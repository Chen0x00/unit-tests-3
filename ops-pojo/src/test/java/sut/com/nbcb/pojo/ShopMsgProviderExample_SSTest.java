/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopMsgProviderExample;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopMsgProviderExample_SSTest extends ShopMsgProviderExample_SSTest_scaffolding {
// allCoveredLines:[15, 16, 17, 20, 21, 24, 28, 29, 32, 36, 40, 41, 44, 45, 46, 50, 51, 52, 54, 58, 59, 63, 64, 65, 66, 72, 73, 74, 653, 654]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:800b4ffb9d93676d39e15815956ecaa5
      //CoveredLines: [15, 16, 17, 63, 64, 65, 66]
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: clear
      shopMsgProviderExample0.clear();
      
      //Test Result Assert
      assertFalse(shopMsgProviderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:873fcf565fb557fdba92298c94a397fb
      //CoveredLines: [15, 16, 17, 50, 51, 54, 58, 59, 72, 73, 74, 653, 654]
      //Assert: assertFalse(method_result.equals((Object)shopMsgProviderExample_Criteria0));
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      LinkedList<ShopMsgProviderExample.Criteria> linkedList0 = new LinkedList<ShopMsgProviderExample.Criteria>();
      //mock shopMsgProviderExample_Criteria0
      ShopMsgProviderExample.Criteria shopMsgProviderExample_Criteria0 = mock(ShopMsgProviderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      linkedList0.add(shopMsgProviderExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopMsgProviderExample.class, shopMsgProviderExample0, "oredCriteria", (Object) linkedList0);
      
      //Call method: createCriteria
      ShopMsgProviderExample.Criteria shopMsgProviderExample_Criteria1 = shopMsgProviderExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopMsgProviderExample_Criteria1.equals((Object)shopMsgProviderExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:6799f63d2ecf63ec02c6eba4095fb571
      //CoveredLines: [15, 16, 17, 50, 51, 52, 54, 58, 59, 72, 73, 74, 653, 654]
      //Assert: assertNotNull(method_result);
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: createCriteria
      ShopMsgProviderExample.Criteria shopMsgProviderExample_Criteria0 = shopMsgProviderExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopMsgProviderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:ca4b8f6508111c12364448e5101fdbca
      //CoveredLines: [15, 16, 17, 24]
      //Assert: assertNull(method_result);
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: getOrderByClause
      String string0 = shopMsgProviderExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:20ffb52833c120b6d73ad38c9c7d2981
      //CoveredLines: [15, 16, 17, 36]
      //Assert: assertTrue(method_result.isEmpty());
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: getOredCriteria
      List<ShopMsgProviderExample.Criteria> list0 = shopMsgProviderExample0.getOredCriteria();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:2d6c595ee36e72d91f3e1a57c57e5f3b
      //CoveredLines: [15, 16, 17, 32]
      //Assert: assertFalse(method_result);
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopMsgProviderExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:8ab2344eecf2a0a8b512eb0102c7421b
      //CoveredLines: [15, 16, 17, 40, 41]
      //Input_0_ShopMsgProviderExample.Criteria: {}
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      //mock shopMsgProviderExample_Criteria0
      ShopMsgProviderExample.Criteria shopMsgProviderExample_Criteria0 = mock(ShopMsgProviderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopMsgProviderExample0.or(shopMsgProviderExample_Criteria0);
      
      //Test Result Assert
      assertNull(shopMsgProviderExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:574062b75021df2127987615ea7b84a4
      //CoveredLines: [15, 16, 17, 44, 45, 46, 58, 59, 72, 73, 74, 653, 654]
      //Assert: assertNotNull(method_result);
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: or
      ShopMsgProviderExample.Criteria shopMsgProviderExample_Criteria0 = shopMsgProviderExample0.or();
      
      //Test Result Assert
      assertNotNull(shopMsgProviderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:70a1643ca8c6ff3d353abe59ae197e43
      //CoveredLines: [15, 16, 17, 28, 29]
      //Input_0_boolean: false
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: setDistinct
      shopMsgProviderExample0.setDistinct(false);
      
      //Test Result Assert
      assertNull(shopMsgProviderExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:2f03759389fc36be5dede71e20294ef5
      //CoveredLines: [15, 16, 17, 20, 21]
      //Input_0_String: msg_body not between
      
      ShopMsgProviderExample shopMsgProviderExample0 = new ShopMsgProviderExample();
      
      //Call method: setOrderByClause
      shopMsgProviderExample0.setOrderByClause("msg_body not between");
      
      //Test Result Assert
      assertEquals("msg_body not between", shopMsgProviderExample0.getOrderByClause());
  }
}
