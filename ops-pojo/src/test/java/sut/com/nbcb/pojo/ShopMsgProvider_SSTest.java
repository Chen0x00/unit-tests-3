/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopMsgProvider;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopMsgProvider_SSTest extends ShopMsgProvider_SSTest_scaffolding {
// allCoveredLines:[8, 10, 12, 14, 16, 18]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:440ecd13d22645929682311122555ce3
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 6Jv-e |`zX>
      //Assert: assertFalse(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider0.equals("6Jv-e |`zX>");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:2792faf28ad509fa8376a7fc54d7ff93
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: shopMsgProvider0
      //Assert: assertTrue(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider0.equals(shopMsgProvider0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:d28df239ddc8db90a4e184819408f3fc
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      //Input_0_Object: shopMsgProvider1
      //Assert: assertTrue(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      ShopMsgProvider shopMsgProvider1 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider0.equals(shopMsgProvider1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:6ef9f35e386d3510945a7f8a5a06ccf8
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      //Input_0_Object: shopMsgProvider0
      //Assert: assertTrue(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      ShopMsgProvider shopMsgProvider1 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider1.equals(shopMsgProvider0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:18fdada44072ad453c138e9f6c80eb9c
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: hashCode
      shopMsgProvider0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCreateTime_05()  throws Throwable  {
      //caseID:4c6bb80bfb2936af0344eac6ea0b76c7
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Date: {}
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCreateTime
      shopMsgProvider0.setCreateTime(date0);
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getMsgBody());
  }

  @Test(timeout = 9000)
  public void test_setId_06()  throws Throwable  {
      //caseID:4936c2e45457cbfce7379e8d04fe9bb7
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 59
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: setId
      shopMsgProvider0.setId("59");
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getGroupName());
  }

  @Test(timeout = 9000)
  public void test_setMsgBody_07()  throws Throwable  {
      //caseID:9a76a9e16100627ff35e31b51678f7b0
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: UV-&OGw3Nn.%Z
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: setMsgBody
      shopMsgProvider0.setMsgBody("UV-&OGw3Nn.%Z");
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getMsgTopic());
  }

  @Test(timeout = 9000)
  public void test_setMsgStatus_08()  throws Throwable  {
      //caseID:a5bfe1aa3ef1f498295c9665315070de
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Integer: 43
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      Integer integer0 = new Integer(43);
      
      //Call method: setMsgStatus
      shopMsgProvider0.setMsgStatus(integer0);
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getId());
  }

  @Test(timeout = 9000)
  public void test_setMsgTopic_09()  throws Throwable  {
      //caseID:68606c5b8591e8c3e5e20fd8b7548900
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 1
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: setMsgTopic
      shopMsgProvider0.setMsgTopic("1");
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getMsgKey());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:b5cf57b457f58466b55bf37d4e9cacad
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      //Assert: assertEquals("ShopMsgProvider(id=null, msgTopic=null, msgBody=null, msgStatus=null, createTime=null)", method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: toString
      String string0 = shopMsgProvider0.toString();
      
      //Test Result Assert
      assertEquals("ShopMsgProvider(id=null, msgTopic=null, msgBody=null, msgStatus=null, createTime=null)", string0);
  }
}
