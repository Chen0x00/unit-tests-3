/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopMsgProvider;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopMsgProvider_SSTest extends ShopMsgProvider_SSTest_scaffolding {
// allCoveredLines:[8, 10, 12, 14, 16, 18]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:14fcdebf8391ead06c797d405ef9601b
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: 2515
      //Assert: assertFalse(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      Integer integer0 = new Integer(2515);
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider0.equals(integer0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:8903b521b6f2577e92a98a3d64567a03
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Object: shopMsgProvider0
      //Assert: assertTrue(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider0.equals(shopMsgProvider0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:9aabe15173061502de4d38736685a664
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      //Input_0_Object: shopMsgProvider0
      //Assert: assertTrue(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      ShopMsgProvider shopMsgProvider1 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider1.equals(shopMsgProvider0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:a938c264aaedfc466674ebc2784478c3
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      //Input_0_Object: shopMsgProvider1
      //Assert: assertTrue(method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      ShopMsgProvider shopMsgProvider1 = new ShopMsgProvider();
      
      //Call method: equals
      boolean boolean0 = shopMsgProvider0.equals(shopMsgProvider1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:e5982828436a1838437b4109f4d34c6b
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: hashCode
      shopMsgProvider0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setCreateTime_05()  throws Throwable  {
      //caseID:6d9e0b1af86fb42aca3c04ff23c84647
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Date: {}
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCreateTime
      shopMsgProvider0.setCreateTime(date0);
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getMsgTopic());
  }

  @Test(timeout = 9000)
  public void test_setId_06()  throws Throwable  {
      //caseID:03c8840e5b016b9e5619b17e19138981
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: 
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: setId
      shopMsgProvider0.setId("");
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getGroupName());
  }

  @Test(timeout = 9000)
  public void test_setMsgBody_07()  throws Throwable  {
      //caseID:fc4f6c6c9144eb159dce92a768f9d09c
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: reactor.core.publisher.ParallelFluxName
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: setMsgBody
      shopMsgProvider0.setMsgBody("reactor.core.publisher.ParallelFluxName");
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getMsgStatus());
  }

  @Test(timeout = 9000)
  public void test_setMsgStatus_08()  throws Throwable  {
      //caseID:66cbc6c185c0b1548da0c3c7b0f595c1
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_Integer: 0
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      Integer integer0 = new Integer(0);
      
      //Call method: setMsgStatus
      shopMsgProvider0.setMsgStatus(integer0);
      
      //Test Result Assert
      assertNull(shopMsgProvider0.getMsgKey());
  }

  @Test(timeout = 9000)
  public void test_setMsgTopic_09()  throws Throwable  {
      //caseID:a7343e30b093f831f9e9b88f43c21b63
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      //Input_0_String: , msgStatus=
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: setMsgTopic
      shopMsgProvider0.setMsgTopic(", msgStatus=");
      
      //Test Result Assert
      assertEquals(", msgStatus=", shopMsgProvider0.getMsgTopic());
  }

  @Test(timeout = 9000)
  public void test_toString_10()  throws Throwable  {
      //caseID:97d3b6f7ecc55cf9f220db725c870fec
      //CoveredLines: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 12, 14, 16, 18]
      //Assert: assertEquals("ShopMsgProvider(id=null, msgTopic=null, msgBody=null, msgStatus=null, createTime=null)", method_result);
      
      ShopMsgProvider shopMsgProvider0 = new ShopMsgProvider();
      
      //Call method: toString
      String string0 = shopMsgProvider0.toString();
      
      //Test Result Assert
      assertEquals("ShopMsgProvider(id=null, msgTopic=null, msgBody=null, msgStatus=null, createTime=null)", string0);
  }
}
