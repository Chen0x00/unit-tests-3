/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopOrderExample;
import java.util.LinkedList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopOrderExample_SSTest extends ShopOrderExample_SSTest_scaffolding {
// allCoveredLines:[16, 17, 18, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 47, 51, 52, 53, 55, 59, 60, 64, 65, 66, 67, 73, 74, 75, 1334, 1335]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:ddfd5d57e709b7372d7906508d5e61af
      //CoveredLines: [16, 17, 18, 64, 65, 66, 67]
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: clear
      shopOrderExample0.clear();
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:37b3b72ed93155b98344e84bc74a7bae
      //CoveredLines: [16, 17, 18, 51, 52, 55, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertFalse(method_result.equals((Object)shopOrderExample_Criteria0));
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      LinkedList<ShopOrderExample.Criteria> linkedList0 = new LinkedList<ShopOrderExample.Criteria>();
      //mock shopOrderExample_Criteria0
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = mock(ShopOrderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      linkedList0.add(shopOrderExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopOrderExample.class, shopOrderExample0, "oredCriteria", (Object) linkedList0);
      
      //Call method: createCriteria
      ShopOrderExample.Criteria shopOrderExample_Criteria1 = shopOrderExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopOrderExample_Criteria1.equals((Object)shopOrderExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:1845d3efda7797277a5123db0632f5ed
      //CoveredLines: [16, 17, 18, 51, 52, 53, 55, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertNotNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: createCriteria
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = shopOrderExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopOrderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:defa4902269c885569da763125e12b9f
      //CoveredLines: [16, 17, 18, 25]
      //Assert: assertNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: getOrderByClause
      String string0 = shopOrderExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:74ee731696cfd3674c40c9217e92ede4
      //CoveredLines: [16, 17, 18, 37]
      //Assert: assertEquals(0, method_result.size());
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: getOredCriteria
      List<ShopOrderExample.Criteria> list0 = shopOrderExample0.getOredCriteria();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:f2505686c41dc3a13ed0b1561f9113ac
      //CoveredLines: [16, 17, 18, 33]
      //Assert: assertFalse(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopOrderExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:cac2ee2f89d08b35d43891c5261d15ba
      //CoveredLines: [16, 17, 18, 41, 42]
      //Input_0_ShopOrderExample.Criteria: {}
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      //mock shopOrderExample_Criteria0
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = mock(ShopOrderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopOrderExample0.or(shopOrderExample_Criteria0);
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:0187bd3d98436d10a618ed1d2914decf
      //CoveredLines: [16, 17, 18, 45, 46, 47, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertNotNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: or
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = shopOrderExample0.or();
      
      //Test Result Assert
      assertNotNull(shopOrderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:150f418960eadf317ea0ec6c3777fada
      //CoveredLines: [16, 17, 18, 29, 30]
      //Input_0_boolean: false
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: setDistinct
      shopOrderExample0.setDistinct(false);
      
      //Test Result Assert
      assertNull(shopOrderExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:c3119f90c8356afc0103f428a369e49d
      //CoveredLines: [16, 17, 18, 21, 22]
      //Input_0_String: add_time <
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: setOrderByClause
      shopOrderExample0.setOrderByClause("add_time <");
      
      //Test Result Assert
      assertEquals("add_time <", shopOrderExample0.getOrderByClause());
  }
}
