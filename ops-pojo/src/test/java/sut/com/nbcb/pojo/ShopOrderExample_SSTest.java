/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopOrderExample;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopOrderExample_SSTest extends ShopOrderExample_SSTest_scaffolding {
// allCoveredLines:[16, 17, 18, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 47, 51, 52, 53, 55, 59, 60, 64, 65, 66, 67, 73, 74, 75, 1334, 1335]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:74fbf4dec32db71d25acab0430f4e50e
      //CoveredLines: [16, 17, 18, 64, 65, 66, 67]
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: clear
      shopOrderExample0.clear();
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:02d6912119104bde84e02e81f6b611a9
      //CoveredLines: [16, 17, 18, 51, 52, 55, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertFalse(method_result.equals((Object)shopOrderExample_Criteria0));
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      Stack<ShopOrderExample.Criteria> stack0 = new Stack<ShopOrderExample.Criteria>();
      //mock shopOrderExample_Criteria0
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = mock(ShopOrderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      stack0.add(shopOrderExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopOrderExample.class, shopOrderExample0, "oredCriteria", (Object) stack0);
      
      //Call method: createCriteria
      ShopOrderExample.Criteria shopOrderExample_Criteria1 = shopOrderExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopOrderExample_Criteria1.equals((Object)shopOrderExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:d2c7582097ac23618d959e3288e6b1f5
      //CoveredLines: [16, 17, 18, 51, 52, 53, 55, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertNotNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: createCriteria
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = shopOrderExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopOrderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:77868ce67974375ecdfa4681f636aec2
      //CoveredLines: [16, 17, 18, 25]
      //Assert: assertNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: getOrderByClause
      String string0 = shopOrderExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:a96bcf17362ef1906a48535019970a3f
      //CoveredLines: [16, 17, 18, 37]
      //Assert: assertTrue(method_result.isEmpty());
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: getOredCriteria
      List<ShopOrderExample.Criteria> list0 = shopOrderExample0.getOredCriteria();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:9a6e70aa6c3bbd63b216819ece632839
      //CoveredLines: [16, 17, 18, 33]
      //Assert: assertFalse(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopOrderExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:9039a5c8cfaa73f5d86c3f9dca6ab951
      //CoveredLines: [16, 17, 18, 41, 42]
      //Input_0_ShopOrderExample.Criteria: {}
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      //mock shopOrderExample_Criteria0
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = mock(ShopOrderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopOrderExample0.or(shopOrderExample_Criteria0);
      
      //Test Result Assert
      assertNull(shopOrderExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:d987b6d672ef74ce4433f5c1a26e9364
      //CoveredLines: [16, 17, 18, 45, 46, 47, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertNotNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: or
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = shopOrderExample0.or();
      
      //Test Result Assert
      assertNotNull(shopOrderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:e8a80f0911713fa0736afbfbeb25e050
      //CoveredLines: [16, 17, 18, 29, 30]
      //Input_0_boolean: true
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: setDistinct
      shopOrderExample0.setDistinct(true);
      
      //Test Result Assert
      assertTrue(shopOrderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:a91e10bf7fa4b3f9ee31376aef2fab60
      //CoveredLines: [16, 17, 18, 21, 22]
      //Input_0_String: @,gk
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: setOrderByClause
      shopOrderExample0.setOrderByClause("@,gk");
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }
}
