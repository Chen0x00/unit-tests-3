/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopOrderExample;
import java.util.List;
import java.util.Vector;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopOrderExample_SSTest extends ShopOrderExample_SSTest_scaffolding {
// allCoveredLines:[16, 17, 18, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 47, 51, 52, 53, 55, 59, 60, 64, 65, 66, 67, 73, 74, 75, 1334, 1335]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:e26aac2034d54a78a781c8e204ecb85a
      //CoveredLines: [16, 17, 18, 64, 65, 66, 67]
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: clear
      shopOrderExample0.clear();
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:c4f2463583220c2d8c1e1b5332c250d6
      //CoveredLines: [16, 17, 18, 51, 52, 55, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertFalse(method_result.equals((Object)shopOrderExample_Criteria0));
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      Vector<ShopOrderExample.Criteria> vector0 = new Vector<ShopOrderExample.Criteria>();
      //mock shopOrderExample_Criteria0
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = mock(ShopOrderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      vector0.add(shopOrderExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopOrderExample.class, shopOrderExample0, "oredCriteria", (Object) vector0);
      
      //Call method: createCriteria
      ShopOrderExample.Criteria shopOrderExample_Criteria1 = shopOrderExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopOrderExample_Criteria1.equals((Object)shopOrderExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:893e26b026a94e1d2c0b82179f8d7cbf
      //CoveredLines: [16, 17, 18, 51, 52, 53, 55, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertNotNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: createCriteria
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = shopOrderExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopOrderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:71f0efb11838549a84f34125b08c32ed
      //CoveredLines: [16, 17, 18, 25]
      //Assert: assertNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: getOrderByClause
      String string0 = shopOrderExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:8e02e3c6c0f109568c007b32958f89e9
      //CoveredLines: [16, 17, 18, 37]
      //Assert: assertTrue(method_result.isEmpty());
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: getOredCriteria
      List<ShopOrderExample.Criteria> list0 = shopOrderExample0.getOredCriteria();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:9a77998757ab65da96090132a3695324
      //CoveredLines: [16, 17, 18, 33]
      //Assert: assertFalse(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopOrderExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:56d98a86e4251b0f2a86a72514259f73
      //CoveredLines: [16, 17, 18, 41, 42]
      //Input_0_ShopOrderExample.Criteria: {}
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      //mock shopOrderExample_Criteria0
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = mock(ShopOrderExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopOrderExample0.or(shopOrderExample_Criteria0);
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:d903147fbb97436b28f451225ddec36e
      //CoveredLines: [16, 17, 18, 45, 46, 47, 59, 60, 73, 74, 75, 1334, 1335]
      //Assert: assertNotNull(method_result);
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: or
      ShopOrderExample.Criteria shopOrderExample_Criteria0 = shopOrderExample0.or();
      
      //Test Result Assert
      assertNotNull(shopOrderExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:9757e0efbc1a2e51a4f700a3e7dc8fc2
      //CoveredLines: [16, 17, 18, 29, 30]
      //Input_0_boolean: false
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: setDistinct
      shopOrderExample0.setDistinct(false);
      
      //Test Result Assert
      assertNull(shopOrderExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:e6c2717a9b49f8ad447c5fe4a48ca3cf
      //CoveredLines: [16, 17, 18, 21, 22]
      //Input_0_String: order_id is not null
      
      ShopOrderExample shopOrderExample0 = new ShopOrderExample();
      
      //Call method: setOrderByClause
      shopOrderExample0.setOrderByClause("order_id is not null");
      
      //Test Result Assert
      assertFalse(shopOrderExample0.isDistinct());
  }
}
