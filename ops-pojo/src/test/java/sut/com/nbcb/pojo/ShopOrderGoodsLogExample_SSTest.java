/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopOrderGoodsLogExample;
import java.util.ArrayList;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopOrderGoodsLogExample_SSTest extends ShopOrderGoodsLogExample_SSTest_scaffolding {
// allCoveredLines:[15, 16, 17, 20, 21, 24, 28, 29, 32, 36, 40, 41, 44, 45, 46, 50, 51, 52, 54, 58, 59, 63, 64, 65, 66, 72, 73, 74, 353, 354]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:8f9c5d7c80ae0b7525fb90ca88d90874
      //CoveredLines: [15, 16, 17, 63, 64, 65, 66]
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: clear
      shopOrderGoodsLogExample0.clear();
      
      //Test Result Assert
      assertFalse(shopOrderGoodsLogExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:0b724183ff7b798946f730d629164287
      //CoveredLines: [15, 16, 17, 50, 51, 54, 58, 59, 72, 73, 74, 353, 354]
      //Assert: assertFalse(method_result.equals((Object)shopOrderGoodsLogExample_Criteria0));
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      ArrayList<ShopOrderGoodsLogExample.Criteria> arrayList0 = new ArrayList<ShopOrderGoodsLogExample.Criteria>();
      //mock shopOrderGoodsLogExample_Criteria0
      ShopOrderGoodsLogExample.Criteria shopOrderGoodsLogExample_Criteria0 = mock(ShopOrderGoodsLogExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      arrayList0.add(shopOrderGoodsLogExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopOrderGoodsLogExample.class, shopOrderGoodsLogExample0, "oredCriteria", (Object) arrayList0);
      
      //Call method: createCriteria
      ShopOrderGoodsLogExample.Criteria shopOrderGoodsLogExample_Criteria1 = shopOrderGoodsLogExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopOrderGoodsLogExample_Criteria1.equals((Object)shopOrderGoodsLogExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:4d90ccfbde1a39a688c9a1cf2a5168b5
      //CoveredLines: [15, 16, 17, 50, 51, 52, 54, 58, 59, 72, 73, 74, 353, 354]
      //Assert: assertNotNull(method_result);
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: createCriteria
      ShopOrderGoodsLogExample.Criteria shopOrderGoodsLogExample_Criteria0 = shopOrderGoodsLogExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopOrderGoodsLogExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:b272f0cd09c700fbc7e08691a5e1adff
      //CoveredLines: [15, 16, 17, 24]
      //Assert: assertNull(method_result);
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: getOrderByClause
      String string0 = shopOrderGoodsLogExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:d425f93b9aeac6af6947d2d370bc2f9f
      //CoveredLines: [15, 16, 17, 36]
      //Assert: assertEquals(0, method_result.size());
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: getOredCriteria
      List<ShopOrderGoodsLogExample.Criteria> list0 = shopOrderGoodsLogExample0.getOredCriteria();
      
      //Test Result Assert
      assertEquals(0, list0.size());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:e9e42c2e4639f270ba9cc1045a5c3cbe
      //CoveredLines: [15, 16, 17, 32]
      //Assert: assertFalse(method_result);
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopOrderGoodsLogExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:38d94ae3ccfea2ca369ff5fb48f842ae
      //CoveredLines: [15, 16, 17, 40, 41]
      //Input_0_ShopOrderGoodsLogExample.Criteria: {}
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      //mock shopOrderGoodsLogExample_Criteria0
      ShopOrderGoodsLogExample.Criteria shopOrderGoodsLogExample_Criteria0 = mock(ShopOrderGoodsLogExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopOrderGoodsLogExample0.or(shopOrderGoodsLogExample_Criteria0);
      
      //Test Result Assert
      assertNull(shopOrderGoodsLogExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:d8ad1609d130c11564c512ff37f0e33f
      //CoveredLines: [15, 16, 17, 44, 45, 46, 58, 59, 72, 73, 74, 353, 354]
      //Assert: assertNotNull(method_result);
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: or
      ShopOrderGoodsLogExample.Criteria shopOrderGoodsLogExample_Criteria0 = shopOrderGoodsLogExample0.or();
      
      //Test Result Assert
      assertNotNull(shopOrderGoodsLogExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:4fb124478dd90cdda5d889f9a21de8ed
      //CoveredLines: [15, 16, 17, 28, 29]
      //Input_0_boolean: true
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: setDistinct
      shopOrderGoodsLogExample0.setDistinct(true);
      
      //Test Result Assert
      assertNull(shopOrderGoodsLogExample0.getOrderByClause());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:d0374e27e830ae1a7ed3892e5a1ed2a0
      //CoveredLines: [15, 16, 17, 20, 21]
      //Input_0_String: 128
      
      ShopOrderGoodsLogExample shopOrderGoodsLogExample0 = new ShopOrderGoodsLogExample();
      
      //Call method: setOrderByClause
      shopOrderGoodsLogExample0.setOrderByClause("128");
      
      //Test Result Assert
      assertFalse(shopOrderGoodsLogExample0.isDistinct());
  }
}
