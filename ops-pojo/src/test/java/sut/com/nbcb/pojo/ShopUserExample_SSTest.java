/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopUserExample;
import java.util.List;
import java.util.Stack;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopUserExample_SSTest extends ShopUserExample_SSTest_scaffolding {
// allCoveredLines:[16, 17, 18, 21, 22, 25, 29, 30, 33, 37, 41, 42, 45, 46, 47, 51, 52, 53, 55, 59, 60, 64, 65, 66, 67, 73, 74, 75, 564, 565]

  @Test(timeout = 9000)
  public void test_clear_0()  throws Throwable  {
      //caseID:15035557595d511fa65a140d55aefc6d
      //CoveredLines: [16, 17, 18, 64, 65, 66, 67]
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: clear
      shopUserExample0.clear();
      
      //Test Result Assert
      assertFalse(shopUserExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_createCriteria_1()  throws Throwable  {
      //caseID:784d43fda517499d20bac69bb913b27e
      //CoveredLines: [16, 17, 18, 51, 52, 55, 59, 60, 73, 74, 75, 564, 565]
      //Assert: assertFalse(method_result.equals((Object)shopUserExample_Criteria0));
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      Stack<ShopUserExample.Criteria> stack0 = new Stack<ShopUserExample.Criteria>();
      //mock shopUserExample_Criteria0
      ShopUserExample.Criteria shopUserExample_Criteria0 = mock(ShopUserExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      stack0.add(shopUserExample_Criteria0);
      
      PrivateAccess.setVariable((Class<?>) ShopUserExample.class, shopUserExample0, "oredCriteria", (Object) stack0);
      
      //Call method: createCriteria
      ShopUserExample.Criteria shopUserExample_Criteria1 = shopUserExample0.createCriteria();
      
      //Test Result Assert
      assertFalse(shopUserExample_Criteria1.equals((Object)shopUserExample_Criteria0));
  }

  @Test(timeout = 9000)
  public void test_createCriteria_2()  throws Throwable  {
      //caseID:8df9c236bd8bd6b0307532e70934eebc
      //CoveredLines: [16, 17, 18, 51, 52, 53, 55, 59, 60, 73, 74, 75, 564, 565]
      //Assert: assertNotNull(method_result);
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: createCriteria
      ShopUserExample.Criteria shopUserExample_Criteria0 = shopUserExample0.createCriteria();
      
      //Test Result Assert
      assertNotNull(shopUserExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_getOrderByClause_3()  throws Throwable  {
      //caseID:7a11a42f3a09016936fcfd2a7cb141ef
      //CoveredLines: [16, 17, 18, 25]
      //Assert: assertNull(method_result);
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: getOrderByClause
      String string0 = shopUserExample0.getOrderByClause();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getOredCriteria_4()  throws Throwable  {
      //caseID:9b56359e06dd6858a042b0b945e72829
      //CoveredLines: [16, 17, 18, 37]
      //Assert: assertTrue(method_result.isEmpty());
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: getOredCriteria
      List<ShopUserExample.Criteria> list0 = shopUserExample0.getOredCriteria();
      
      //Test Result Assert
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 9000)
  public void test_isDistinct_5()  throws Throwable  {
      //caseID:6a11e87a3dcc03911f47b477cf978fc7
      //CoveredLines: [16, 17, 18, 33]
      //Assert: assertFalse(method_result);
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: isDistinct
      boolean boolean0 = shopUserExample0.isDistinct();
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_or_6()  throws Throwable  {
      //caseID:470d1a6a657f3d7a92de5a88e07a3cd7
      //CoveredLines: [16, 17, 18, 41, 42]
      //Input_0_ShopUserExample.Criteria: {}
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      //mock shopUserExample_Criteria0
      ShopUserExample.Criteria shopUserExample_Criteria0 = mock(ShopUserExample.Criteria.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: or
      shopUserExample0.or(shopUserExample_Criteria0);
      
      //Test Result Assert
      assertFalse(shopUserExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_or_7()  throws Throwable  {
      //caseID:689894ce2eeebecfad78824b26097565
      //CoveredLines: [16, 17, 18, 45, 46, 47, 59, 60, 73, 74, 75, 564, 565]
      //Assert: assertNotNull(method_result);
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: or
      ShopUserExample.Criteria shopUserExample_Criteria0 = shopUserExample0.or();
      
      //Test Result Assert
      assertNotNull(shopUserExample_Criteria0);
  }

  @Test(timeout = 9000)
  public void test_setDistinct_8()  throws Throwable  {
      //caseID:d4517113ed1d9857d18994096783974e
      //CoveredLines: [16, 17, 18, 29, 30]
      //Input_0_boolean: true
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: setDistinct
      shopUserExample0.setDistinct(true);
      
      //Test Result Assert
      assertTrue(shopUserExample0.isDistinct());
  }

  @Test(timeout = 9000)
  public void test_setOrderByClause_9()  throws Throwable  {
      //caseID:ed4712062b031495f1454468e9e6e250
      //CoveredLines: [16, 17, 18, 21, 22]
      //Input_0_String: D
      
      ShopUserExample shopUserExample0 = new ShopUserExample();
      
      //Call method: setOrderByClause
      shopUserExample0.setOrderByClause("D");
      
      //Test Result Assert
      assertFalse(shopUserExample0.isDistinct());
  }
}
