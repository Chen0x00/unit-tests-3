/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopUser;
import java.math.BigDecimal;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopUser_SSTest extends ShopUser_SSTest_scaffolding {
// allCoveredLines:[7, 23, 27, 28, 31, 35, 36, 39, 43, 44, 47, 51, 52, 55, 59, 60, 63, 67, 68, 71, 75, 76]

  @Test(timeout = 9000)
  public void test_getUserId_00()  throws Throwable  {
      //caseID:c426561a39c28f4c9d9d3e5c7b41fcf8
      //CoveredLines: [7, 23]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserId
      Long long0 = shopUser0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserMobile_01()  throws Throwable  {
      //caseID:ffe5cae03b6d426044fb92dddcab139b
      //CoveredLines: [7, 47]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserMobile
      String string0 = shopUser0.getUserMobile();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getUserMoney_02()  throws Throwable  {
      //caseID:61597fead24893a07545e6b9d390fc7b
      //CoveredLines: [7, 71]
      //Assert: assertEquals((short)0, method_result.shortValue());
      
      ShopUser shopUser0 = new ShopUser();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      
      PrivateAccess.setVariable((Class<?>) ShopUser.class, shopUser0, "userMoney", (Object) bigDecimal0);
      
      //Call method: getUserMoney
      BigDecimal bigDecimal1 = shopUser0.getUserMoney();
      
      //Test Result Assert
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 9000)
  public void test_getUserName_03()  throws Throwable  {
      //caseID:e34709297165d5c57746ccadafc6dba8
      //CoveredLines: [7, 31]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserName
      String string0 = shopUser0.getUserName();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getUserPassword_04()  throws Throwable  {
      //caseID:2dcfe2a538c8a50ca0893b8fc5256e95
      //CoveredLines: [7, 39]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserPassword
      String string0 = shopUser0.getUserPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getUserRegTime_05()  throws Throwable  {
      //caseID:9fbd6dff499ef6e506f0d1dd2400db2e
      //CoveredLines: [7, 63]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserRegTime
      Date date0 = shopUser0.getUserRegTime();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 9000)
  public void test_getUserScore_06()  throws Throwable  {
      //caseID:989e7f1ea3100e988d8327d175636b83
      //CoveredLines: [7, 55]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserScore
      Integer integer0 = shopUser0.getUserScore();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 9000)
  public void test_setUserId_07()  throws Throwable  {
      //caseID:ce4078a2fc3dbefefba2dc9ad8e553a4
      //CoveredLines: [7, 27, 28]
      //Input_0_Long: 203
      
      ShopUser shopUser0 = new ShopUser();
      Long long0 = new Long(203);
      
      //Call method: setUserId
      shopUser0.setUserId(long0);
      
      //Test Result Assert
      assertNull(shopUser0.getUserName());
  }

  @Test(timeout = 9000)
  public void test_setUserMobile_08()  throws Throwable  {
      //caseID:b2256bc6ad0592c57a3b8abd3b77ed84
      //CoveredLines: [7, 51, 52]
      //Input_0_String: null
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserMobile
      shopUser0.setUserMobile((String) null);
      
      //Test Result Assert
      assertNull(shopUser0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserMobile_09()  throws Throwable  {
      //caseID:5771e1b80be18516df0f8c18b5497b23
      //CoveredLines: [7, 51, 52]
      //Input_0_String: reactor.corPpublishe.BlckingIterable$Subsc@iberIterator
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserMobile
      shopUser0.setUserMobile("reactor.corPpublishe.BlckingIterable$Subsc@iberIterator");
      
      //Test Result Assert
      assertEquals("reactor.corPpublishe.BlckingIterable$Subsc@iberIterator", shopUser0.getUserMobile());
  }

  @Test(timeout = 9000)
  public void test_setUserMoney_10()  throws Throwable  {
      //caseID:82899048eaacfb3b66c1fb7028aaf8da
      //CoveredLines: [7, 75, 76]
      //Input_0_BigDecimal: BigDecimal.TEN
      
      ShopUser shopUser0 = new ShopUser();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      
      //Call method: setUserMoney
      shopUser0.setUserMoney(bigDecimal0);
      
      //Test Result Assert
      assertNull(shopUser0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserName_11()  throws Throwable  {
      //caseID:c028535d851c48e524ac44a974bcb480
      //CoveredLines: [7, 35, 36]
      //Input_0_String: null
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserName
      shopUser0.setUserName((String) null);
      
      //Test Result Assert
      assertNull(shopUser0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserName_12()  throws Throwable  {
      //caseID:bf138662bc7cebc9f4d2f3b69fc2d67a
      //CoveredLines: [7, 35, 36]
      //Input_0_String: 
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserName
      shopUser0.setUserName("");
      
      //Test Result Assert
      assertEquals("", shopUser0.getUserName());
  }

  @Test(timeout = 9000)
  public void test_setUserPassword_13()  throws Throwable  {
      //caseID:bab0a2602a75a53037bc502b4e4b465a
      //CoveredLines: [7, 43, 44]
      //Input_0_String: null
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserPassword
      shopUser0.setUserPassword((String) null);
      
      //Test Result Assert
      assertNull(shopUser0.getUserName());
  }

  @Test(timeout = 9000)
  public void test_setUserPassword_14()  throws Throwable  {
      //caseID:2e736752412cf8317df7bfc1ce463bfc
      //CoveredLines: [7, 43, 44]
      //Input_0_String: Uw
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserPassword
      shopUser0.setUserPassword("Uw");
      
      //Test Result Assert
      assertEquals("Uw", shopUser0.getUserPassword());
  }

  @Test(timeout = 9000)
  public void test_setUserRegTime_15()  throws Throwable  {
      //caseID:64828434b7a47de440600079066f30c3
      //CoveredLines: [7, 67, 68]
      //Input_0_Date: {}
      
      ShopUser shopUser0 = new ShopUser();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setUserRegTime
      shopUser0.setUserRegTime(date0);
      
      //Test Result Assert
      assertNull(shopUser0.getUserPassword());
  }

  @Test(timeout = 9000)
  public void test_setUserScore_16()  throws Throwable  {
      //caseID:f949cefd69d1d9295a693a5f452a8fec
      //CoveredLines: [7, 59, 60]
      //Input_0_Integer: 27
      
      ShopUser shopUser0 = new ShopUser();
      Integer integer0 = new Integer(27);
      
      //Call method: setUserScore
      shopUser0.setUserScore(integer0);
      
      //Test Result Assert
      assertEquals(27, (int)shopUser0.getUserScore());
  }
}
