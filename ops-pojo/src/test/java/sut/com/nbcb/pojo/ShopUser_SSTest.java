/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.nbcb.pojo.ShopUser;
import java.math.BigDecimal;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class ShopUser_SSTest extends ShopUser_SSTest_scaffolding {
// allCoveredLines:[7, 23, 27, 28, 31, 35, 36, 39, 43, 44, 47, 51, 52, 55, 59, 60, 63, 67, 68, 71, 75, 76]

  @Test(timeout = 9000)
  public void test_getUserId_00()  throws Throwable  {
      //caseID:507b4a6121dc93f10edf4c6c0a928da0
      //CoveredLines: [7, 23]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserId
      Long long0 = shopUser0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 9000)
  public void test_getUserMobile_01()  throws Throwable  {
      //caseID:c59385418218a5adf62b636da5f214d5
      //CoveredLines: [7, 47]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserMobile
      String string0 = shopUser0.getUserMobile();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getUserMoney_02()  throws Throwable  {
      //caseID:6538afa35f0e542efe22cbd600931c02
      //CoveredLines: [7, 71]
      //Assert: assertEquals((short)1, method_result.shortValue());
      
      ShopUser shopUser0 = new ShopUser();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      PrivateAccess.setVariable((Class<?>) ShopUser.class, shopUser0, "userMoney", (Object) bigDecimal0);
      
      //Call method: getUserMoney
      BigDecimal bigDecimal1 = shopUser0.getUserMoney();
      
      //Test Result Assert
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 9000)
  public void test_getUserName_03()  throws Throwable  {
      //caseID:a71c2428bbde7e8fdccc1c196b4400b6
      //CoveredLines: [7, 31]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserName
      String string0 = shopUser0.getUserName();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getUserPassword_04()  throws Throwable  {
      //caseID:809f152ffa6cf69d1a4192226c6bda00
      //CoveredLines: [7, 39]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserPassword
      String string0 = shopUser0.getUserPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 9000)
  public void test_getUserRegTime_05()  throws Throwable  {
      //caseID:82416a181a5bc3e962421a0bea0a45f9
      //CoveredLines: [7, 63]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserRegTime
      Date date0 = shopUser0.getUserRegTime();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 9000)
  public void test_getUserScore_06()  throws Throwable  {
      //caseID:8f5b997a876a2a1fe3cfc99e3520262d
      //CoveredLines: [7, 55]
      //Assert: assertNull(method_result);
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: getUserScore
      Integer integer0 = shopUser0.getUserScore();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 9000)
  public void test_setUserId_07()  throws Throwable  {
      //caseID:8fb46f2d09fafdd34676439848dd4745
      //CoveredLines: [7, 27, 28]
      //Input_0_Long: 1653
      
      ShopUser shopUser0 = new ShopUser();
      Long long0 = new Long(1653);
      
      //Call method: setUserId
      shopUser0.setUserId(long0);
      
      //Test Result Assert
      assertEquals(1653L, (long)shopUser0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserMobile_08()  throws Throwable  {
      //caseID:7ad944285d2fcfcfa6abd469174aecd7
      //CoveredLines: [7, 51, 52]
      //Input_0_String: null
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserMobile
      shopUser0.setUserMobile((String) null);
      
      //Test Result Assert
      assertNull(shopUser0.getUserMobile());
  }

  @Test(timeout = 9000)
  public void test_setUserMobile_09()  throws Throwable  {
      //caseID:cad11bd1cab73dda0090fa91dc138444
      //CoveredLines: [7, 51, 52]
      //Input_0_String: L},<w(zw3Y
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserMobile
      shopUser0.setUserMobile("L},<w(zw3Y");
      
      //Test Result Assert
      assertEquals("L},<w(zw3Y", shopUser0.getUserMobile());
  }

  @Test(timeout = 9000)
  public void test_setUserMoney_10()  throws Throwable  {
      //caseID:7b915d59e67ff7de26c0f241bd1e1fda
      //CoveredLines: [7, 75, 76]
      //Input_0_BigDecimal: BigDecimal.ONE
      
      ShopUser shopUser0 = new ShopUser();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      
      //Call method: setUserMoney
      shopUser0.setUserMoney(bigDecimal0);
      
      //Test Result Assert
      assertNull(shopUser0.getUserScore());
  }

  @Test(timeout = 9000)
  public void test_setUserName_11()  throws Throwable  {
      //caseID:6f5016024a79ccfa3ed1bc87434c5fdc
      //CoveredLines: [7, 35, 36]
      //Input_0_String: null
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserName
      shopUser0.setUserName((String) null);
      
      //Test Result Assert
      assertNull(shopUser0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserName_12()  throws Throwable  {
      //caseID:00ffba5756cda992f6fa09ee00d16579
      //CoveredLines: [7, 35, 36]
      //Input_0_String: ) with setting 
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserName
      shopUser0.setUserName(") with setting ");
      
      //Test Result Assert
      assertEquals(") with setting", shopUser0.getUserName());
  }

  @Test(timeout = 9000)
  public void test_setUserPassword_13()  throws Throwable  {
      //caseID:3c0937b810a55c7ed5a3e43ed3c89d02
      //CoveredLines: [7, 43, 44]
      //Input_0_String: null
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserPassword
      shopUser0.setUserPassword((String) null);
      
      //Test Result Assert
      assertNull(shopUser0.getUserMobile());
  }

  @Test(timeout = 9000)
  public void test_setUserPassword_14()  throws Throwable  {
      //caseID:c5f5a16d716609fe87b64511983b1a56
      //CoveredLines: [7, 43, 44]
      //Input_0_String: 1.0
      
      ShopUser shopUser0 = new ShopUser();
      
      //Call method: setUserPassword
      shopUser0.setUserPassword("1.0");
      
      //Test Result Assert
      assertEquals("1.0", shopUser0.getUserPassword());
  }

  @Test(timeout = 9000)
  public void test_setUserRegTime_15()  throws Throwable  {
      //caseID:cef94a383dd8228465a8e919eb42d3e9
      //CoveredLines: [7, 67, 68]
      //Input_0_Date: {}
      
      ShopUser shopUser0 = new ShopUser();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setUserRegTime
      shopUser0.setUserRegTime(date0);
      
      //Test Result Assert
      assertNull(shopUser0.getUserScore());
  }

  @Test(timeout = 9000)
  public void test_setUserScore_16()  throws Throwable  {
      //caseID:00d283bf22c023042d0b3099e5b9ce57
      //CoveredLines: [7, 59, 60]
      //Input_0_Integer: 226
      
      ShopUser shopUser0 = new ShopUser();
      Integer integer0 = new Integer(226);
      
      //Call method: setUserScore
      shopUser0.setUserScore(integer0);
      
      //Test Result Assert
      assertEquals(226, (int)shopUser0.getUserScore());
  }
}
