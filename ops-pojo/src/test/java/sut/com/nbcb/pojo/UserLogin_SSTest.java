/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.pojo.UserLogin;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class UserLogin_SSTest extends UserLogin_SSTest_scaffolding {
// allCoveredLines:[5, 7, 8]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:70d27ed5a9df966434dc4497b9bd024e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 35qFg?
      //Assert: assertFalse(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals("35qFg?");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:efcc3fd38ed15d5922be04fc9759f9ad
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: userLogin0
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(userLogin0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:1990544a32011f997c84a2520dfd6b74
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Input_0_Object: userLogin0
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      UserLogin userLogin1 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin1.equals(userLogin0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:962017792e4ec3e8ae8822a3ed5f950b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Input_0_Object: userLogin1
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      UserLogin userLogin1 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(userLogin1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:d29c7632b3f75fd528ae5bbfe3974660
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: hashCode
      userLogin0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAccount_5()  throws Throwable  {
      //caseID:dd3b267fc338bb0a3f6599d4ecc2535a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: a*
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: setAccount
      userLogin0.setAccount("a*");
      
      //Test Result Assert
      assertEquals("a*", userLogin0.getAccount());
  }

  @Test(timeout = 9000)
  public void test_setPassword_6()  throws Throwable  {
      //caseID:6c4ddf17546a55f570a8db542906ff8c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: Gn
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: setPassword
      userLogin0.setPassword("Gn");
      
      //Test Result Assert
      assertEquals("Gn", userLogin0.getPassword());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:912625ddb4aa6ca28390b10d1ee95127
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Assert: assertEquals("UserLogin(account=null, password=null)", method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: toString
      String string0 = userLogin0.toString();
      
      //Test Result Assert
      assertEquals("UserLogin(account=null, password=null)", string0);
  }
}
