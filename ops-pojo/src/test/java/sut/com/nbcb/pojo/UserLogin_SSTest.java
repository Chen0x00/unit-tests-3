/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.pojo.UserLogin;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class UserLogin_SSTest extends UserLogin_SSTest_scaffolding {
// allCoveredLines:[5, 7, 8]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:d3711102546793edc335f6d733bbbb63
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: )
      //Assert: assertFalse(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(")");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:327ea68ccfe30ebbb0a539b8f78aed44
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: userLogin0
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(userLogin0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:e67f56d2a886c7ba37f062e26be19b0f
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Input_0_Object: userLogin0
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      UserLogin userLogin1 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin1.equals(userLogin0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:ad3b2aaf45994e91ba952e39425eadc5
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Input_0_Object: userLogin1
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      UserLogin userLogin1 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(userLogin1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:04c3296ba2f04ae2497899be2c19bd09
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: hashCode
      userLogin0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAccount_5()  throws Throwable  {
      //caseID:9563f0c595bac4b8c426bb75217e5b0d
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: setAccount
      userLogin0.setAccount("1.0");
      
      //Test Result Assert
      assertEquals("1.0", userLogin0.getAccount());
  }

  @Test(timeout = 9000)
  public void test_setPassword_6()  throws Throwable  {
      //caseID:5ede3e8572365f35a183cafd3b88be52
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 0
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: setPassword
      userLogin0.setPassword("0");
      
      //Test Result Assert
      assertEquals("0", userLogin0.getPassword());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:b2bf2894f618b82b7d6e631a08ef3e77
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Assert: assertEquals("UserLogin(account=null, password=null)", method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: toString
      String string0 = userLogin0.toString();
      
      //Test Result Assert
      assertEquals("UserLogin(account=null, password=null)", string0);
  }
}
