/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.nbcb.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.nbcb.pojo.UserLogin;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class UserLogin_SSTest extends UserLogin_SSTest_scaffolding {
// allCoveredLines:[5, 7, 8]

  @Test(timeout = 9000)
  public void test_equals_0()  throws Throwable  {
      //caseID:f8e0762247ad3f67588e47b422ee3c27
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: userLogin0
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(userLogin0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_1()  throws Throwable  {
      //caseID:8cf5f4974a3fbcbf0df8dd0ed43e6a7e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: #
      //Assert: assertFalse(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals("#");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_2()  throws Throwable  {
      //caseID:ad3af4cd0677da53594db302ef4777eb
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Input_0_Object: userLogin0
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      UserLogin userLogin1 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin1.equals(userLogin0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_3()  throws Throwable  {
      //caseID:0757f1f683dc41a16a2da2a1d8c8722e
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Input_0_Object: userLogin1
      //Assert: assertTrue(method_result);
      
      UserLogin userLogin0 = new UserLogin();
      UserLogin userLogin1 = new UserLogin();
      
      //Call method: equals
      boolean boolean0 = userLogin0.equals(userLogin1);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_4()  throws Throwable  {
      //caseID:b490d46059fb6abff3478dc7aec9f584
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: hashCode
      userLogin0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setAccount_5()  throws Throwable  {
      //caseID:5cc1bd5d3795bd4ff6a99752eeb5de96
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 0
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: setAccount
      userLogin0.setAccount("0");
      
      //Test Result Assert
      assertEquals("0", userLogin0.getAccount());
  }

  @Test(timeout = 9000)
  public void test_setPassword_6()  throws Throwable  {
      //caseID:cfdc15c681d7a22caccbd55cc6ece55c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: setPassword
      userLogin0.setPassword("");
      
      //Test Result Assert
      assertNull(userLogin0.getAccount());
  }

  @Test(timeout = 9000)
  public void test_toString_7()  throws Throwable  {
      //caseID:48e37bb2a0e5f4be85f565d9896eb398
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 7, 8]
      //Assert: assertEquals("UserLogin(account=null, password=null)", method_result);
      
      UserLogin userLogin0 = new UserLogin();
      
      //Call method: toString
      String string0 = userLogin0.toString();
      
      //Test Result Assert
      assertEquals("UserLogin(account=null, password=null)", string0);
  }
}
